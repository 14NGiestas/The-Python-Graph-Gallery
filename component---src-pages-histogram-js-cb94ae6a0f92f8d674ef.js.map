{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/pages/histogram.js","webpack:///./src/components/ChartImage.js","webpack:///./node_modules/react-bootstrap/esm/ToggleButton.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack:///./src/util/functionDescriptions.js","webpack:///./src/components/FunctionExploration.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","ViolinPlot","title","isTocEnabled","seoDescription","description","id","className","functionName","chartFamily","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","noop","ToggleButton","forwardRef","_ref","ref","children","checked","type","onChange","value","disabled","inputRef","props","_useState","focused","setFocused","handleFocus","e","target","tagName","handleBlur","createElement","undefined","active","as","autoComplete","onFocus","onBlur","displayName","ButtonGroup","bsPrefix","size","toggle","vertical","_ref$as","Component","rest","prefix","baseClass","defaultProps","role","functionDescriptions","kdeplot","docUrl","basicUsage","parameters","relatedChart","violin","FunctionExploration","s","functionInfo","React","useState","selectedParameter","setSelectedParameter","selectedParameterInfo","filter","param","allButtons","map","item","i","key","variant","currentTarget","charAt","toUpperCase","slice","style","marginLeft","fontSize","href"],"mappings":"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","file":"component---src-pages-histogram-js-cb94ae6a0f92f8d674ef.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport FunctionExploration from '../components/FunctionExploration'\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>Histograms allow to visualize the distribution of a numeric variable for one or several groups. The values are split in bins, each bin is represented as a bar.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot the histogram thanks to the distplot function\nsns.distplot( a=df[\"sepal_length\"], hist=True, kde=False, rug=False )\n`\n\nexport default function ViolinPlot() {\n\n  return (\n\n    <Layout title=\"Histogram\" isTocEnabled seoDescription=\"A collection of histogram examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Histogram\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Seaborn</code> is definitely the best library to quickly build a histogram thanks to its <code>distplot()</code>.</p><p>Note the importance of the <code>bins</code> parameter: try several values to see which represents your data the best. ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/20-basic-histogram-seaborn\"}>\n              <ChartImage imgName=\"20_Basic_Histogram_seaborn2\"\n                caption=\"The most basic histogram one can make with python and seaborn\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Histogram charts with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. It is well adapted to build histogram thanks to\n          its <code>distplot</code> function. The following charts will guide you\n          through its usage, going from a very{\" \"}\n          <Link to=\"\">basic histogram</Link> to something much more{\" \"}\n          <Link to=\"\">customized</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn1\"\n            caption=\"The most basic histogram with seaborn. It adds a density on top by default\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn2\"\n            caption=\"Play with the bin parameter to control the number of bars\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist1\"\n            caption=\"Remove the density chart on top of the seaborn histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist2\"\n            caption=\"Add rug on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist3\"\n            caption=\"Customize the rug: color, size and more\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist4\"\n            caption=\"Customize the appearance of the density chart displayed on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"24_Histogram_with_boxplot_on_top\"\n            caption=\"How to split the chart window to display a boxplot on top of the histogram\"\n            linkTo=\"/24-histogram-with-a-boxplot-on-top-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables1\"\n            caption=\"Compare the distribution of several groups on the same chart\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables2\"\n            caption=\"Use small multiple to compare the distribution of several groups\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot1\"\n            caption=\"Histogram can be added around a scatterplot to show each variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot6\"\n            caption=\"Histogram can be added around a 2d density chart to show x and y variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"density-mirror-histogram\"\n            caption=\"Mirror density chart to compare the distribution of 2 variables\"\n            linkTo=\"/density-mirror\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration functionName={\"violin\"} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={caption}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","export const functionDescriptions = {\n    kdeplot: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"fill\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'control the color', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    },\n    violin: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.violinplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"width\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'controls the color', type: 'string', relatedChart: '70_deffffed' }\n        ]\n    }\n}\n\n\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { functionDescriptions } from \"../util/functionDescriptions\";\nimport './functionExploration.css'\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport default function FunctionExploration({ functionName }) {\n\n    // Get the right function\n    const functionInfo = functionDescriptions[functionName]\n\n    // Get the right parameter\n    const [selectedParameter, setSelectedParameter] = React.useState(functionInfo.parameters[0].name)\n    const selectedParameterInfo = functionInfo.parameters.filter(param => param.name === selectedParameter)[0]\n\n    const allButtons = functionInfo.parameters.map(\n        (item, i) =>\n            <ToggleButton\n                type=\"radio\"\n                active={true}\n                key={i}\n                className={\"functionButton\"}\n                variant=\"secondary\"\n                size=\"sm\"\n                value={item.name}\n                checked={selectedParameter === item.name}\n                onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n            >\n                {item.name}\n            </ToggleButton>\n    )\n\n    return (\n        <>\n            <h2 id={capitalize(functionName + \"()\" + \" details\")}>&#128270; <code>{functionName}</code> function parameters<a style={{ marginLeft: \"15px\", fontSize: \"14px\" }} href={functionInfo.docUrl}>&rarr; see full doc</a></h2>\n            <ButtonGroup toggle>{allButtons}</ButtonGroup>\n            <div>\n                <code>string</code>\n                <span>&rarr; {selectedParameterInfo.description}</span>\n            </div>\n            {/* <div style={{ paddingLeft: \"6px\", fontSize: \"14px\" }}><Link to={selectedParameterInfo.relatedChart}>check a chart using it</Link></div> */}\n            <br />\n            <br />\n        </>\n    )\n}\n"],"sourceRoot":""}