{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/pages/bubble-map.js","webpack:///./src/components/BannerImage.js","webpack:///./src/components/Sponsors.js","webpack:///./src/components/TitleAndDescription.js","webpack:///./src/components/ChartImageContainer.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","BubbleMap","title","isTocEnabled","seoDescription","description","id","size","imgName","linkTo","src","style","border","width","height","margin","chartFamily","BannerImage","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","Sponsor","Container","Col","md","href","onClick","Spacing","TitleAndDescription","chartInfo","chart","SocialMediaButtons","dangerouslySetInnerHTML","__html","marginTop","fullUrlToInternalLink","pythonURL","Button","label","dataToVizURL","ChartImageContainer","xs","prefix","spans","span","offset","order","_propValue$span","length","allGifs","ChartImage","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","key"],"mappings":"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","file":"component---src-pages-bubble-map-js-d4825ffd43f847a62a0d.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/bubblemap.html'>bubble map</a> uses circles of different size to represent a numeric value on a territory. It displays one bubble per geographic coordinate, or one bubble per region. As for <a href='https://python-graph-gallery.com/map/'>background maps</a>, several python libraries are useful to build them: <code>folium</code>, <code>geopandas</code>, <code>geoplot</code> and <code>basemap</code> are listed here.</p>\";\n\nexport default function BubbleMap() {\n\n  return (\n\n    <Layout title=\"Bubble Map\" isTocEnabled seoDescription=\"A collection of bubble map examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Bubble Map\"\n        description={chartDescription}\n      />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Overview\">🔎  Building maps with Python</h2>\n          <p>\n            If you're new to geospatial analysis with python, I strongly advise to check\n            the <Link to='/map'>background map section</Link> of the gallery. It gives a great overview of the\n            available tools, and help you pick the right one.\n          </p>\n          <Link to='/map'>\n            <Button size=\"sm\">Background Map Section</Button>\n          </Link>\n          <br /><br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Geopandas & Geoplot\"><code>Geopandas</code> and <code>GeoPlot</code></h2>\n        <p>\n          <code>Seaborn</code> is another great alternative to build an area chart with <code>python</code>. The below examples\n          show how to start basic, apply usual customization, and use the small multiple technique\n          for when you have several groups to compare.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"map-read-geojson-with-python-geopandas\"\n            caption=\"How to read a geoJson file with geopandas and transform it to a geodataframe.\"\n            linkTo=\"/map-read-geojson-with-python-geopandas\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Folium\">Bubble map with <code>Folium</code></h2>\n        <p>\n          <code>Folium</code> is a wrapper of the <code>leaflet.js</code> javascript library. Once you understood\n          how to <Link to=\"/map\">initialize</Link> an interactive map with it, you can parse a data frame of coordinates\n          and add markers to the map with functions like <code>Circle()</code> and <code>..()</code>\n        </p>\n        <div className=\"mx-auto\">\n          <iframe src=\"/interactiveCharts/313-bubble-map-with-folium.html\" title=\"Basic map with folium\" style={{ border: \"none\", width: '800px', height: '300px' }}></iframe>\n        </div>\n        <Link to='/313-bubble-map-with-folium'>\n          <Button size=\"sm\">See code</Button>\n        </Link>\n        <br /><br />\n        <p>It is also possible to add any other kind of markers instead of circles. This is what you get with the default <code>folium.Marker()</code> function:</p>\n        <div className=\"mx-auto\">\n          <iframe src=\"/interactiveCharts/312-add-markers-on-folium-map.html\" title=\"Folium and markers\" style={{ border: \"none\", width: '800px', height: '300px' }}></iframe>\n        </div>\n        <Link to='/312-add-markers-on-folium-map'>\n          <Button size=\"sm\">See code</Button>\n        </Link>\n        <br /><br />\n        <p>And this is what you can build by passing some <code>html</code> to the marker and popup parameters:</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"312-add-markers-on-folium-map1\"\n            caption=\"How to read a geoJson file with geopandas and transform it to a geodataframe.\"\n            linkTo=\"/312-add-markers-on-folium-map\"\n          />\n          <ChartImageContainer\n            imgName=\"312-add-markers-on-folium-map2\"\n            caption=\"How to read a geoJson file with geopandas and transform it to a geodataframe.\"\n            linkTo=\"/312-add-markers-on-folium-map\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Basemap\">Bubble map with <code>Basemap</code></h2>\n        <p>\n          <code>Seaborn</code> is another great alternative to build an area chart with <code>python</code>. The below examples\n          show how to start basic, apply usual customization, and use the small multiple technique\n          for when you have several groups to compare.\n        </p>\n        <div style={{ margin: \"0 auto\" }}>\n          <Link to='/315-a-world-map-of-surf-tweets'>\n            <ChartImage imgName={'315_Tweet_Surf_Bubble_map1'} caption={'Bubble map with Python and the basemap library'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"map\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\n// This component displays a logo representing a sponsor of the gallery.\nexport default function BannerImage({ imgName, caption }) {\n\n  const data = useStaticQuery(graphql`\n    query MyQuery3 {\n      allFile(filter: { relativeDirectory: { eq: \"banner\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./sponsors.css\";\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport BannerImage from \"../components/BannerImage\"\nimport Spacing from \"./Spacing\";\n\n// Component that displays a banner with the gallery sponsors\nexport default function Sponsor() {\n  return (\n    <>\n      <div className=\"sponsorsBanner\">\n        <Container>\n          <Row>\n            <Col md={3}>\n              <a\n                href=\"https://www.datacamp.com?tap_a=5644-dce66f&tap_s=230804-f65650\" title=\"Datacamp\"\n                onClick=\"trackOutboundLink('https://www.datacamp.com?tap_a=5644-dce66f&tap_s=230804-f65650'); return false;\">\n                <BannerImage imgName=\"datacamp\" caption={\"Datacamp\"} />\n              </a>\n            </Col>\n            <Col md={3}>\n              <a\n                href=\"https://365datascience.pxf.io/qRPNb\" title=\"365DataScience\"\n                onClick=\"trackOutboundLink('https://365datascience.pxf.io/qRPNb'); return false;\">\n                <BannerImage imgName=\"365_data_science\" caption={\"365 Data Science\"} />\n              </a>\n            </Col>\n            <Col md={3}>\n              <a\n                href=\"https://www.dataquest.io/course/storytelling-data-visualization?utm_source=python%20graph%20gallery&utm_medium=banner&utm_content=storytelling%20with%20data\"\n                onClick=\"trackOutboundLink('https://www.dataquest.io/course/storytelling-data-visualization?utm_source=python%20graph%20gallery&utm_medium=banner&utm_content=storytelling%20with%20data'); return false;\">\n                <BannerImage imgName=\"data-vis-ad\" caption={\"Dataquest\"} />\n              </a>\n            </Col>\n            <Col md={3}>\n              <a\n                href=\"https://gumroad.com/a/280032371/uTxEFw\" title=\"StackAbuse\"\n                onClick=\"trackOutboundLink('https://gumroad.com/a/280032371/uTxEFw'); return false;\">\n                <BannerImage imgName=\"stackabuse\" caption={\"Stack Abuse book\"} />\n              </a>\n            </Col>\n          </Row>\n          {/* <div className='sponsorsLink'>\n            <Link to='/about#Sponsoring'>Wish to support the gallery?</Link>\n          </div> */}\n        </Container>\n      </div>\n      <Spacing />\n    </>\n  );\n\n}\n\n\n","import \"./titleAndDescription.css\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport SocialMediaButtons from \"./SocialMediaButtons\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"gatsby\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\nimport Sponsors from \"../components/Sponsors\";\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <>\n      <div className=\"titleAndDescription\">\n        <h1 className=\"mainTitle\">{title}</h1>\n        <hr className=\"smallHr\" />\n        <SocialMediaButtons />\n        <div\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        {chartType && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + \" section\"}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n      <Sponsors />\n    </>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  chartType: PropTypes.string\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}