{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./src/components/ChartImageContainer.js","webpack:///./src/pages/cheat-sheets.js","webpack:///./src/components/ChartImage.js","webpack:///./static/graph/animated_chart.gif","webpack:///./src/components/ChartFamilySection.js","webpack:///./static/graph/animated_volcano.gif"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","ChartImageContainer","imgName","linkTo","xs","md","CheatSheet","title","isTocEnabled","description","id","href","chartFamily","allGifs","ChartImage","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","module","exports","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","chart","fullUrlToInternalLink","pythonURL","key","label"],"mappings":"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","file":"component---src-pages-cheat-sheets-js-f4716d85a07817b905e6.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport { Button } from \"react-bootstrap\";\nimport Spacing from \"../components/Spacing\";\nimport basicScatterGif from \"../../static/graph/animated_chart.gif\"\nimport volcanoGif from \"../../static/graph/animated_volcano.gif\"\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\n\nconst chartDescription =\n  \"<p>This section provides a few cheat sheets related with <code>python</code>, data wrangling and data visualization. Even with a perfect understanding of <code>python</code> and its libraries, it's almost impossible to remember the syntax of each function of the ecosystem. That's where cheatsheets are useful ðŸ”¥!</p>\";\n\n\nexport default function CheatSheet() {\n\n  return (\n\n    <Layout title=\"Animation\" isTocEnabled>\n\n      <TitleAndDescription\n        title=\"Cheat Sheets\"\n        description={chartDescription}\n      />\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Datacamp sheets\">ðŸ”¥ Datacamp cheat sheets</h2>\n        <p>Datacamp provides 3 cheatsheets describing the basics of <code>matplotlib</code>, <code>seaborn</code> and <code>pandas</code>: the 3 most commonly used library for data analysis with python:</p>\n        <Row>\n          <Col xs={12} md={4}>\n            <a href=\"https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Matplotlib_Cheat_Sheet.pdf\">\n              <ChartImage imgName={\"matplotlib_cheat_sheet\"} caption=\"Matplotlib cheat sheet\" />\n            </a>\n          </Col>\n          <Col xs={12} md={4}>\n            <a href=\"http://datacamp-community-prod.s3.amazonaws.com/dbed353d-2757-4617-8206-8767ab379ab3\">\n              <ChartImage imgName={\"pandas_cheat_sheet\"} caption=\"Pandas cheat sheet\" />\n            </a>\n          </Col>\n          <Col xs={12} md={4}>\n            <a href=\"https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Seaborn_Cheat_Sheet.pdf\">\n              <ChartImage imgName={\"seaborn_cheat_sheet\"} caption=\"Seaborn cheat sheet\" />\n            </a>\n          </Col>\n        </Row>\n\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/animated_chart-44a8ddec407b87779aafe6917c54c18f.gif\";","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/animated_volcano-9b154eaa7e16ebe494011669b12787db.gif\";"],"sourceRoot":""}