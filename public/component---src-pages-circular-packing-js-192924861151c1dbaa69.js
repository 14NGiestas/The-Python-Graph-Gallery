(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"2mCb":function(e,a,t){},"59G+":function(e,a,t){"use strict";t.d(a,"a",(function(){return o}));var l=t("q1tI"),r=t.n(l),c=t("eynx"),n=t("JI6e"),i=t("Wbzz");function o(e){var a=e.imgName,t=e.caption,l=e.linkTo;return r.a.createElement(n.a,{xs:12,md:4},r.a.createElement(i.Link,{to:l},r.a.createElement(c.a,{imgName:a,caption:t})))}},eynx:function(e,a,t){"use strict";t.d(a,"a",(function(){return m}));t("2mCb");var l=t("q1tI"),r=t.n(l),c=t("Wbzz"),n=t("9eSz"),i=t.n(n),o=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function m(e){var a=e.imgName,t=e.caption;if(o.includes(a))return r.a.createElement("p",null,"TODO");var l=Object(c.useStaticQuery)("3289484431").allFile.edges.find((function(e){return e.node.name.includes(a)}));return l?r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"chartImageContainer"},r.a.createElement(i.a,{alt:a,fluid:l.node.childImageSharp.fluid,className:"chartImageImg"}),r.a.createElement("div",{className:"chartImageOverlay"},r.a.createElement("div",{className:"chartImageOverlayText"},r.a.createElement("p",null,t))))):null}},tc0Y:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return f}));var l=t("q1tI"),r=t.n(l),c=t("4/Vk"),n=t("7oih"),i=t("7vrA"),o=t("6+GL"),m=t("3Z9Z"),u=t("59G+"),h=t("pJaR"),s=t("Wbzz"),d=t("Hrqu"),p=t("eynx"),E=t("cWnB"),g=(t("ZJrt"),t("gMBH"));function f(){return r.a.createElement(n.a,{title:"Circular Packing",isTocEnabled:!0},r.a.createElement(c.a,{title:"Circular Packing",description:"<p>A <a href='https://www.data-to-viz.com/graph/treemap.html'>treemap</a> displays hierarchical data as a set of nested rectangles. Each group is represented by a rectangle, which area is proportional to its value. In <code>Python</code>, the <code>squarify</code> library allows to compute the rectangle positions and plot it.</p>"}),r.a.createElement("div",{className:"greySection",id:"related"},r.a.createElement(i.a,null,r.a.createElement("h2",{id:"Circlify"},"‚Ñπ Ô∏è A note on the ",r.a.createElement("code",null,"Circlify")," package"),r.a.createElement("p",null,"The ",r.a.createElement("code",null,"circlify")," package is a pure Python implementation of a circle packing layout algorithm. It has been developped by ",r.a.createElement("a",{href:"https://github.com/elmotec"},"Jerome Lecomte")," and lives on ",r.a.createElement("a",{href:"https://github.com/elmotec/circlify"},"github"),". üôèüôè "),r.a.createElement("p",null,"You can install it with ",r.a.createElement("code",null,"pip install circlify"),"."),r.a.createElement("a",{href:"https://github.com/elmotec/circlify"},r.a.createElement(E.a,{size:"sm"},"Circlify documentation")))),r.a.createElement(g.a,null),r.a.createElement(i.a,null,r.a.createElement("h2",{id:"One level of hierarchy"},r.a.createElement(d.b,null),"One level of hierarchy"),r.a.createElement("p",null,r.a.createElement("code",null,"Circlify")," can work without a hierarchical structure, i.e. with just a set of numeric varialbles that will be each displayed as a bubble. Note that the package just compute the position and size of each bubble. Once tha\"t's done, ",r.a.createElement("code",null,"matplotlib")," is used to make the chart itself with usual functions."),r.a.createElement(m.a,null,r.a.createElement(u.a,{imgName:"circular-packing-1-level-hierarchy1",caption:"Most basic circle packing",linkTo:"/circular-packing-1-level-hierarchy"}),r.a.createElement(u.a,{imgName:"circular-packing-1-level-hierarchy2",caption:"Add colors and labels",linkTo:"/circular-packing-1-level-hierarchy"}),r.a.createElement(u.a,{imgName:"circular-packing-1-level-hierarchy3",caption:"control space between bubbles",linkTo:"/circular-packing-1-level-hierarchy"}))),r.a.createElement(g.a,null),r.a.createElement(i.a,null,r.a.createElement("h2",{id:"Several levels"},r.a.createElement(d.b,null),"Several levels of hierarchy"),r.a.createElement("p",null,r.a.createElement("code",null,"Circlify")," also works from a hierarchical structure. Bubbles representing the bottom of the hierarchy are encapsulated into higher hierarchy bubbles and so on. Note that the process is a bit more tedious here, but still doable thanks to ",r.a.createElement("code",null,"matplotlib"),"."),r.a.createElement("div",{style:{maxWidth:"800px",margin:"0 auto",padding:30}},r.a.createElement(s.Link,{to:"/circular-packing-several-levels-of-hierarchy"},r.a.createElement(p.a,{imgName:"circular-packing-several-levels-of-hierarchy-large",caption:"Circular packing with several levels of hierarchy with Python and the circlize library"})))),r.a.createElement(g.a,null),r.a.createElement("div",{className:"greySection",id:"related"},r.a.createElement(i.a,null,r.a.createElement(h.a,{chartFamily:"partOfAWhole"}))),r.a.createElement(g.a,null),r.a.createElement(i.a,null,r.a.createElement(o.a,null)),r.a.createElement(g.a,null))}}}]);
//# sourceMappingURL=component---src-pages-circular-packing-js-192924861151c1dbaa69.js.map