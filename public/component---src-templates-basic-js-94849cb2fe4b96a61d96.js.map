{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/templates/basic.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/Spacing.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","Template","data","console","log","jupyterNotebook","metadata","title","description","slug","isTocEnabled","dangerouslySetInnerHTML","__html","html","chartFamily","hasGreyBackground","pageSlug","isNotebook","Col","prefix","spans","span","offset","order","_propValue$span","length","Spacing","style","height","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","chart","id","fullUrlToInternalLink","pythonURL","key","xs","md","label"],"mappings":"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","file":"component---src-templates-basic-js-94849cb2fe4b96a61d96.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import \"./basic.css\";\n\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from 'prop-types';\n\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport Contact from \"../components/Contact\";\nimport Spacing from \"../components/Spacing\";\n\nexport default function Template({ data }) {\n  console.log(\"data\", data)\n  const {\n    title,\n    description,\n    family,\n    chartType,\n    slug\n  } = data.jupyterNotebook.metadata;\n  return (\n    <Layout title={title} isTocEnabled chartType={chartType} >\n\n      <TitleAndDescription\n        title={title}\n        description={'<p>' + description + '</p>'}\n        chartType={chartType}\n      />\n\n      {/* Blog content */}\n      <Container>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: data.jupyterNotebook.html }}\n        />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <ChartFamilySection chartFamily={family} hasGreyBackground />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact pageSlug={slug} isNotebook />\n      </Container>\n\n      <Spacing />\n\n    </Layout>\n  );\n}\n\nTemplate.propTypes = {\n  data: PropTypes.object\n};\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    jupyterNotebook(fields: { slug: { eq: $slug } }) {\n      html\n      metadata {\n        title\n        description\n        seoDescription\n        family\n        chartType\n        keywords\n        slug\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React from 'react'\n\nexport default function Spacing() {\n\n  return (<div className=\"spacing\" style={{ height: 140 }}></div>)\n\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}