{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/components/ChartImageContainer.js","webpack:///./src/pages/sankey-diagram.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/Spacing.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","ChartImageContainer","imgName","linkTo","xs","md","Chord","title","isTocEnabled","description","id","size","href","style","maxWidth","margin","padding","chartFamily","Col","prefix","spans","span","offset","order","_propValue$span","length","allGifs","ChartImage","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","Spacing","height","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","chart","fullUrlToInternalLink","pythonURL","key","label"],"mappings":"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","file":"component---src-pages-sankey-diagram-js-287b206b53d860a890e6.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Plotly } from \"../components/MiscellaneousLogos\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/sankey.html'>Sankey Diagram</a> is a visualisation technique that allows to display flows. Several entities (nodes) are represented by rectangles or text. Their links are represented with arrows or arcs that have a width proportional to the importance of the flow.\";\n\n\nexport default function Chord() {\n\n  return (\n\n    <Layout title=\"Sankey diagram\" isTocEnabled>\n      <TitleAndDescription\n        title=\"Sankey diagram\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Plotly\"><Plotly />Sankey diagram with <code>Plotly</code></h2>\n        <p>\n          <code>Plotly</code> is an awesome <code>Python</code> library for interactive data visualization. It is most probably\n          the best tool to create a Sankey Diagram. Its <code>Sankey()</code> function handles most of the business\n          logic for you, allowing to get a figure in a couple of lines of code.\n        </p>\n        <p>The examples below should quickly get you started with this <Link to='/sankey-diagram-with-python-and-plotly'>minimal starting example</Link>. They\n        then describes the most common of type of customization you probably want to apply to your figure\n        to make it appealing.\n        </p>\n        <Link to='/chord-diagram-python-chord'>\n          <Button size=\"sm\">\n            Show me the code\n          </Button>\n        </Link>\n        <Row>\n          <ChartImageContainer\n            imgName=\"chord-diagram-chord-library\"\n            caption=\"Most basic chord diagram example from a random matrix.\"\n            linkTo=\"/sankey-diagram-with-python-and-plotly\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Sankey diagram with <code>Matplotlib</code></h2>\n        <p>\n          The <code>matplotlib</code> library offers a <code>Sankey()</code> function that also allows to build sankey diagrams.\n          It is a bit limited in my opinion, since it only allows to visualize flows passing through one unique group\n          as shown in the example below.\n        </p>\n        <p>The example below comes from the <a href='https://matplotlib.org/api/sankey_api.html'>official doc</a>. Have a look to the <a href='https://python-graph-gallery.com/220-sankey-diagram-with-matplotlib/'>code <here></here></a>.</p>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <Link to='/220-sankey-diagram-with-matplotlib'>\n            <ChartImage imgName={'220_Sankey_Matplotlib'} caption={'Basic Sankey diagram with Matplotlib'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"flow\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Spacing() {\n\n  return (<div className=\"spacing\" style={{ height: 140 }}></div>)\n\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}