{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/pages/density-plot.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/Spacing.js","webpack:///./node_modules/react-bootstrap/esm/ToggleButton.js","webpack:///./src/util/functionDescriptions.js","webpack:///./src/components/FunctionExploration.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","DensityPlot","title","isTocEnabled","description","id","className","style","margin","padding","functionName","chartFamily","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","Spacing","height","noop","ToggleButton","forwardRef","_ref","ref","children","checked","type","onChange","value","disabled","inputRef","props","_useState","focused","setFocused","handleFocus","e","target","tagName","handleBlur","createElement","undefined","active","as","autoComplete","onFocus","onBlur","displayName","functionDescriptions","kdeplot","docUrl","basicUsage","parameters","relatedChart","violin","FunctionExploration","s","functionInfo","React","useState","selectedParameter","setSelectedParameter","selectedParameterInfo","filter","param","allButtons","map","item","i","key","variant","size","currentTarget","charAt","toUpperCase","slice","marginLeft","fontSize","href","ButtonGroup","toggle","paddingLeft","bsPrefix","vertical","_ref$as","Component","rest","prefix","baseClass","defaultProps","role"],"mappings":"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","file":"component---src-pages-density-plot-js-1f6cc81f0fad7b0e0d62.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport FunctionExploration from '../components/FunctionExploration'\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>Density plots allow to visualize the distribution of a numeric variable for one or several groups. They are very well adapted for large dataset, as stated in data-to-viz.com. Note that 2 approaches exist to build them in python: the first one consists in computing a kernel density estimate, the second one in building a high resolution histogram.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Make default density plot\nsns.kdeplot(df['sepal_width'])\n`\n\nexport default function DensityPlot() {\n\n  return (\n\n    <Layout title=\"Density chart\" isTocEnabled>\n\n      <TitleAndDescription\n        title=\"Density chart\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>If you are in a rush, the most straightforward way to build a density chart is to use <code>Seaborn</code> and its <code>kdeplot()</code> function. You just need to provide it with a numeric variable from your dataset. ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/70-basic-density-plot-with-seaborn\"}>\n              <ChartImage imgName=\"70_Basic_density_plot_Seaborn\"\n                caption=\"The most basic density plot one can make with python and seaborn\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Density charts with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. It is well adapted to build density charts thanks to\n          its <code>kdeplot</code> function. The following charts will guide you\n          through its usage, going from a very{\" \"}\n          <Link to=\"\">basic density plot</Link> to something much more{\" \"}\n          <Link to=\"\">customized</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"70_Basic_density_plot_Seaborn\"\n            caption=\"The most basic density plot one can make with python and seaborn\"\n            linkTo=\"/70-basic-density-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"71_Shaded_density_plot_Seaborn\"\n            caption=\"seaborn densty chart with filled area\"\n            linkTo=\"/71-density-plot-with-shade-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"72_Horizontal_density_plot_Seaborn\"\n            caption=\"vertical seaborn density chart\"\n            linkTo=\"/72-horizontal-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"73_Control_bandwidth_densityplot_Seaborn1\"\n            caption=\"control density chart color\"\n            linkTo=\"/73-control-bandwidth-of-seaborn-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"73_Control_bandwidth_densityplot_Seaborn2\"\n            caption=\"Changed the bandwidth used to compute the density\"\n            linkTo=\"/73-control-bandwidth-of-seaborn-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"74_density_plot_multi_variables\"\n            caption=\"Density chart with several displayed groups\"\n            linkTo=\"/74-density-plot-of-several-variables\"\n          />\n          <ChartImageContainer\n            imgName=\"density-mirror\"\n            caption=\"Mirror density chart to compare the distribution of 2 variables\"\n            linkTo=\"/density-mirror\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n\n      <Container>\n        <h2 id=\"Multiple groups\"><Seaborn />Density charts, <code>Seaborn</code> and multiple groups</h2>\n        <p>\n          It is a common use case to compare the density of several groups in a dataset. Several options\n          exist to do so. You can plot all items on the same chart, using transparency and annotation\n          to make the comparison possible. Or you can a technique called small multiples where the graph window\n          is split in individual charts, avoiding group overlaps that are sometimes hard to read.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"density-chart-multiple-groups-seaborn1\"\n            caption=\"Density chart with multiple groups overlapped\"\n            linkTo=\"/density-chart-multiple-groups-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"density-chart-multiple-groups-seaborn3\"\n            caption=\"Density chart with multiple groups overlapped\"\n            linkTo=\"/density-chart-multiple-groups-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"density-chart-multiple-groups-seaborn4\"\n            caption=\"Density chart with multiple groups overlapped\"\n            linkTo=\"/density-chart-multiple-groups-seaborn\"\n          />\n        </Row>\n        <div style={{ margin: \"0 auto\", padding: 0 }}>\n          <Link to='/density-chart-multiple-groups-seaborn'>\n            <ChartImage imgName='density-chart-multiple-groups-seaborn5' caption={'A seaborn heatmap with clusterization and dendrogram applied'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration functionName={\"kdeplot\"} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib /> Density charts with <code>Matplotlib</code></h2>\n        <p>\n          It is possible to build a density chart with <code>matplotlib</code>, but it is truely a\n          struggle compared to making it with <code>seaborn</code> as shown above. Here is an example\n          to prove it is doable, but I strongly advise to go for <code>seaborn</code>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"density-chart-matplotlib-vector\"\n            caption=\"Basic density chart with python and matplotlib from a vector of data\"\n            linkTo=\"/density-chart-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"density-chart-matplotlib-csv\"\n            caption=\"Read a csv file and plot the density of a column\"\n            linkTo=\"/density-chart-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Spacing() {\n\n  return (<div className=\"spacing\" style={{ height: 140 }}></div>)\n\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","export const functionDescriptions = {\n    kdeplot: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"fill\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'controls something else', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'what what whaaat', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    },\n    violin: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.violinplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"width\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'controls something else', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'what what whaaat the fuuuck', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    }\n}\n\n\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { functionDescriptions } from \"../util/functionDescriptions\";\nimport './functionExploration.css'\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport default function FunctionExploration({ functionName }) {\n\n    // Get the right function\n    const functionInfo = functionDescriptions[functionName]\n\n    // Get the right parameter\n    const [selectedParameter, setSelectedParameter] = React.useState(functionInfo.parameters[0].name)\n    const selectedParameterInfo = functionInfo.parameters.filter(param => param.name === selectedParameter)[0]\n\n    const allButtons = functionInfo.parameters.map(\n        (item, i) =>\n            <ToggleButton\n                type=\"radio\"\n                active={true}\n                key={i}\n                className={\"functionButton\"}\n                variant=\"secondary\"\n                size=\"sm\"\n                value={item.name}\n                checked={selectedParameter === item.name}\n                onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n            >\n                {item.name}\n            </ToggleButton>\n    )\n\n    return (\n        <>\n            <h2 id={capitalize(functionName + \"()\" + \" details\")}>&#128270; <code>{functionName}</code> function parameters<a style={{ marginLeft: \"15px\", fontSize: \"14px\" }} href={functionInfo.docUrl}>&rarr; see full doc</a></h2>\n            <ButtonGroup toggle>{allButtons}</ButtonGroup>\n            <div>\n                <code>string</code>\n                <span>&rarr; {selectedParameterInfo.description}</span>\n            </div>\n            <div style={{ paddingLeft: \"6px\", fontSize: \"14px\" }}><Link to={selectedParameterInfo.relatedChart}>check a chart using it</Link></div>\n            <br />\n            <br />\n        </>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"sourceRoot":""}