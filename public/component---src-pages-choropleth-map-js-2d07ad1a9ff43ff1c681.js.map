{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/Spacing.js","webpack:///./src/pages/choropleth-map.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","className","alt","fluid","childImageSharp","Spacing","style","height","Choropleth","title","isTocEnabled","description","id","margin","padding","size","src","border","width","chartFamily"],"mappings":"uHAAA,+FAMe,SAASA,EAAT,GAA4D,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC9D,OACE,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,IAAD,CAAMC,GAAIH,GACR,kBAAC,IAAD,CAAYF,QAASA,EAASC,QAASA,Q,kCCV/C,sGAMMK,EAAU,CAAC,iBAAkB,yBAA0B,wBAI9C,SAASC,EAAT,GAA2C,IAArBP,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE5C,GAAIK,EAAQE,SAASR,GACnB,OACE,mCAGJ,IAuBMS,EAvBOC,YAAe,cAuBTC,QAAQC,MAAMC,MAAK,SAACC,GACrC,OAAOA,EAAEC,KAAKC,KAAKR,SAASR,MAG9B,OAAKS,EAKH,oCACE,yBAAKQ,UAAU,uBACb,kBAAC,IAAD,CACEC,IAAKlB,EACLmB,MAAOV,EAAMM,KAAKK,gBAAgBD,MAClCF,UAAU,kBAEZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBACb,2BAAIhB,OAbL,O,kCC7CX,2DAEe,SAASoB,IAEtB,OAAQ,yBAAKJ,UAAU,UAAUK,MAAO,CAAEC,OAAQ,S,kCCJpD,sNAmBe,SAASC,IAEtB,OAEE,kBAAC,IAAD,CAAQC,MAAM,iBAAiBC,cAAY,GAEzC,kBAAC,IAAD,CACED,MAAM,iBACNE,YAVN,iYAaI,kBAAC,IAAD,KACE,wBAAIC,GAAG,uBAAP,uBAAiD,2CAAjD,QAA4E,0CAC5E,2BACE,yCADF,qFACwG,2CADxG,gEAIA,2BAAG,yCAAH,UAA8B,8CAA9B,yFACA,yBAAKN,MAAO,CAAEO,OAAQ,SAAUC,QAAS,IACvC,kBAAC,IAAD,CAAMzB,GAAG,oCACP,kBAAC,IAAD,CAAYL,QAAS,kCAAmCC,QAAS,uEAGrE,kBAAC,IAAD,CAAMI,GAAG,oCACP,kBAAC,IAAD,CAAQ0B,KAAK,MAAb,eAMJ,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIH,GAAG,UAAS,wCAAhB,0CACA,2BACE,wCADF,wBAC0C,4CAD1C,qKAEiE,wCAFjE,0CAGE,8CAHF,cAKA,yBAAKX,UAAU,WACb,4BAAQe,IAAI,yDAAyDP,MAAM,wBAAwBH,MAAO,CAAEW,OAAQ,OAAQC,MAAO,QAASX,OAAQ,YAEtJ,kBAAC,IAAD,CAAMlB,GAAG,mCACP,kBAAC,IAAD,CAAQ0B,KAAK,MAAb,cAIJ,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIH,GAAG,UAAS,wCAAhB,oCACA,2BACE,yCADF,6DACgF,wCADhF,8JAKA,yBAAKX,UAAU,WACb,4BAAQe,IAAI,uDAAuDP,MAAM,wCAAwCH,MAAO,CAAEW,OAAQ,OAAQC,MAAO,QAASX,OAAQ,YAEpK,kBAAC,IAAD,CAAMlB,GAAG,iCACP,kBAAC,IAAD,CAAQ0B,KAAK,MAAb,cAMJ,kBAAC,IAAD,MAEA,yBAAKd,UAAU,cAAcW,GAAG,WAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAoBO,YAAY,UAIpC,kBAAC,IAAD,MAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGF,kBAAC,IAAD","file":"component---src-pages-choropleth-map-js-2d07ad1a9ff43ff1c681.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Spacing() {\n\n  return (<div className=\"spacing\" style={{ height: 140 }}></div>)\n\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport Button from \"react-bootstrap/Button\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/choropleth.html'>choropleth map</a> displays divided geographical areas or regions that are coloured in relation to a numeric variable. This section explains how to build static choropleth with <code>geopandas</code> and <code>geoplot</code>, and interactive versions with tools like <code>folium</code> and <code>plotly</code>.</p>\";\n\nexport default function Choropleth() {\n\n  return (\n\n    <Layout title=\"Choropleth map\" isTocEnabled>\n\n      <TitleAndDescription\n        title=\"Choropleth map\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Geopandas & Geoplot\">Choropleth map with <code>Geopandas</code> and <code>GeoPlot</code></h2>\n        <p>\n          <code>Geoplot</code> is a python library for geospatial data visualization. It works pretty well with <code>geopandas</code>, another\n          library made to deal with geospatial data objects.\n        </p>\n        <p><code>Geoplot</code> has a <code>choropleth()</code> function that allows to build a choropleth map easily as shown in the example below.</p>\n        <div style={{ margin: \"0 auto\", padding: 0 }}>\n          <Link to='/choropleth-map-geopandas-python'>\n            <ChartImage imgName={'choropleth-map-geopandas-python'} caption={'Choropleth map of US counties with Python, Geopandas and Geoplot'} />\n          </Link>\n        </div>\n        <Link to='/choropleth-map-geopandas-python'>\n          <Button size=\"xl\">\n            Read post\n        </Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Folium\"><code>Folium</code> for google maps style choropleth maps</h2>\n        <p>\n          <code>Folium</code> is a wrapper of the <code>Leaflet.js</code> javascript library. It brings the power of javascript for data visualization, but still allows to\n          do some data wrangling with Python. Building a choropleth with <code>Folium</code> is quite straightforward thanks to the\n          <code>choropleth()</code> function.\n        </p>\n        <div className=\"mx-auto\">\n          <iframe src=\"/interactiveCharts/292-choropleth-map-with-folium.html\" title=\"Folium choropleth map\" style={{ border: \"none\", width: '800px', height: '430px' }}></iframe>\n        </div>\n        <Link to='/292-choropleth-map-with-folium'>\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotly\"><code>Plotly</code> for interactive choropleth maps</h2>\n        <p>\n          <code>Seaborn</code> is another great alternative to build an area chart with <code>python</code>. The below examples\n          show how to start basic, apply usual customization, and use the small multiple technique\n          for when you have several groups to compare.\n        </p>\n        <div className=\"mx-auto\">\n          <iframe src=\"/interactiveCharts/choropleth-map-plotly-python.html\" title=\"parallel coordinate chart with plotly\" style={{ border: \"none\", width: '800px', height: '500px' }}></iframe>\n        </div>\n        <Link to=\"/choropleth-map-plotly-python\">\n          <Button size=\"sm\">\n            See code\n          </Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"map\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"sourceRoot":""}