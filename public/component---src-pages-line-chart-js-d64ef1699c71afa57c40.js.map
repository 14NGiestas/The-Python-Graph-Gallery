{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/components/ChartImage.js","webpack:///./src/pages/line-chart.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","className","alt","fluid","childImageSharp","LinePlot","title","isTocEnabled","seoDescription","description","id","href","chartFamily"],"mappings":"8FAAA,+FAMe,SAASA,EAAT,GAA4D,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC9D,OACE,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,OAAD,CAAMC,GAAIH,GACR,kBAAC,IAAD,CAAYF,QAASA,EAASC,QAASA,Q,kCCV/C,sGAMMK,EAAU,CAAC,iBAAkB,yBAA0B,wBAI9C,SAASC,EAAT,GAA2C,IAArBP,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE5C,GAAIK,EAAQE,SAASR,GACnB,OACE,mCAGJ,IAuBMS,EAvBOC,yBAAe,cAuBTC,QAAQC,MAAMC,MAAK,SAACC,GACrC,OAAOA,EAAEC,KAAKC,KAAKR,SAASR,MAG9B,OAAKS,EAKH,oCACE,yBAAKQ,UAAU,uBACb,kBAAC,IAAD,CACEC,IAAKlB,EACLmB,MAAOV,EAAMM,KAAKK,gBAAgBD,MAClCF,UAAU,kBAEZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBACb,2BAAIhB,OAbL,O,oCC7CX,oOA6Be,SAASoB,IAEtB,OAEE,kBAAC,IAAD,CAAQC,MAAM,aAAaC,cAAY,EAACC,eAAe,uGAErD,kBAAC,IAAD,CACEF,MAAM,aACNG,YArBN,mTAwBI,kBAAC,IAAD,KACE,wBAAIC,GAAG,SAAP,iBACA,kBAAC,IAAD,CAAKT,UAAU,sBACb,kBAAC,IAAD,CAAKb,GAAI,GACP,8DAAmC,4CAAnC,4CAAmG,wCAAnG,cACA,6KACA,+FAEF,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAI,mCACR,kBAAC,IAAD,CAAYL,QAAQ,sBAClBC,QAAQ,qEAIhB,kBAAC,IAAD,KArCO,gLAwCT,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIyB,GAAG,cAAa,kBAAC,IAAD,MAApB,mBAAkD,6CAClD,2BACE,4CADF,sDAC4E,wCAD5E,kBAC8G,kBAAC,OAAD,CAAMrB,GAAG,mCAAT,eAD9G,wCAEmC,wCAFnC,4CAE+F,kBAAC,OAAD,CAAMA,GAAG,iCAAT,YAF/F,4EAKA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEL,QAAQ,sBACRC,QAAQ,4EACRC,OAAO,oCAET,kBAAC,IAAD,CACEF,QAAQ,wBACRC,QAAQ,sFACRC,OAAO,oCAKb,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIwB,GAAG,mBAAkB,kBAAC,IAAD,MAAzB,mCAAuE,4CAAvE,KACA,6KAE0C,uBAAGC,KAAK,qDAAR,mBAF1C,wKAKA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE3B,QAAQ,yBACRC,QAAQ,kCACRC,OAAO,8BAET,kBAAC,IAAD,CACEF,QAAQ,uBACRC,QAAQ,sFACRC,OAAO,uCAET,kBAAC,IAAD,CACEF,QAAQ,qBACRC,QAAQ,kCACRC,OAAO,8BAET,kBAAC,IAAD,CACEF,QAAQ,iCACRC,QAAQ,gCACRC,OAAO,wCAET,kBAAC,IAAD,CACEF,QAAQ,8BACRC,QAAQ,4CACRC,OAAO,0CAKb,kBAAC,IAAD,MAEA,yBAAKe,UAAU,cAAcS,GAAG,WAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAoBE,YAAY,gBAIpC,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGF,kBAAC,IAAD","file":"component---src-pages-line-chart-js-d64ef1699c71afa57c40.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/line.html'>line chart</a> displays the evolution of one or several numeric variables. It is one of the most common chart type, so it can be build using any python viz library, like <code>matplotlib</code>, <code>seaborn</code> or <code>plotly</code>.</p>\";\n\nconst quickCode = `# libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# create data\nvalues=np.cumsum(np.random.randn(1000,1))\n\n# use the plot function\nplt.plot(values)\n`\n\nexport default function LinePlot() {\n\n  return (\n\n    <Layout title=\"Line chart\" isTocEnabled seoDescription=\"A collection of line chart examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Line Chart\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>Making a simple line chart with <code>matplotlib</code> is pretty straightforward thanks to the <code>plot()</code> function.</p>\n            <p>If you provide only a series of values, it will consider that these values are ordered and will use values from 1 to n to create the X axis.ðŸ”¥</p>\n            <p>For more control on the chart, see the dedicated section below.</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/120-line-chart-with-matplotlib\"}>\n              <ChartImage imgName=\"120_Basic_lineplot2\"\n                caption=\"The most basic histogram one can make with python and seaborn\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Line chart with <code>Matplotlib</code></h2>\n        <p>\n          <code>Matplotlib</code> is a great fit to build line charts thanks to its <code>plot()</code> function. The <Link to='/120-line-chart-with-matplotlib'>first chart</Link> of\n          this section explains how to use <code>plot()</code> from any kind of data input format. The <Link to='/121-line-chart-customization'>next one</Link> goes deep\n          into chart customization (line width, color aspect and more).\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"120_Basic_lineplot1\"\n            caption=\"How to build a basic line chart with python from any kind of input format\"\n            linkTo=\"/120-line-chart-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"121_Custom_line_plot3\"\n            caption=\"How to customize the matplotlib line plot appearance: width, stroke, color, style..\"\n            linkTo=\"/121-line-chart-customization\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Multiple groups\"><Matplotlib />Line chart with several groups (<code>Matplotlib</code>)</h2>\n        <p>\n          A line chart with multiple groups allows to show the evolution of several items on the same figure. It\n          is powerful but can quickly turn into a <a href='https://www.data-to-viz.com/caveat/spaghetti.html'>spaghetti chart</a>: when too many lines are displayed they get hard to\n          read. The examples below explain how to build one, and what are the alternative to show your data a better way.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"122_Multiple_line_plot\"\n            caption=\"Line chart with multiple groups\"\n            linkTo=\"/122-multiple-lines-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"123_Highlight_a_line\"\n            caption=\"How to customize the matplotlib line plot appearance: width, stroke, color, style..\"\n            linkTo=\"/123-highlight-a-line-in-line-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"124_Spaghetti_plot\"\n            caption=\"Line chart with multiple groups\"\n            linkTo=\"/124-spaghetti-plot.ipynb\"\n          />\n          <ChartImageContainer\n            imgName=\"125_Lineplot_small_multiple_v2\"\n            caption=\"Line chart and small multiple\"\n            linkTo=\"/125-small-multiples-for-line-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"125_Lineplot_small_multiple\"\n            caption=\"Line chart and small multiple (variation)\"\n            linkTo=\"/125-small-multiples-for-line-chart\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"sourceRoot":""}