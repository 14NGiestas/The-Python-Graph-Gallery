{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/pages/boxplot.js","webpack:///./src/components/ChartImage.js","webpack:///./node_modules/react-bootstrap/esm/ToggleButton.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack:///./src/util/functionDescriptions.js","webpack:///./src/components/FunctionExploration.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","Boxplot","title","isTocEnabled","seoDescription","description","id","className","href","size","functionName","chartFamily","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","noop","ToggleButton","forwardRef","_ref","ref","children","checked","type","onChange","value","disabled","inputRef","props","_useState","focused","setFocused","handleFocus","e","target","tagName","handleBlur","createElement","undefined","active","as","autoComplete","onFocus","onBlur","displayName","ButtonGroup","bsPrefix","toggle","vertical","_ref$as","Component","rest","prefix","baseClass","defaultProps","role","functionDescriptions","kdeplot","docUrl","basicUsage","parameters","relatedChart","violin","FunctionExploration","s","functionInfo","React","useState","selectedParameter","setSelectedParameter","selectedParameterInfo","filter","param","allButtons","map","item","i","key","variant","currentTarget","charAt","toUpperCase","slice","style","marginLeft","fontSize"],"mappings":"uHAAA,+FAMe,SAASA,EAAT,GAA4D,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC9D,OACE,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,OAAD,CAAMC,GAAIH,GACR,kBAAC,IAAD,CAAYF,QAASA,EAASC,QAASA,Q,2DCV/C,4PA0Be,SAASK,IAEtB,OAEE,kBAAC,IAAD,CAAQC,MAAM,UAAUC,cAAY,EAACC,eAAe,oGAElD,kBAAC,IAAD,CACEF,MAAM,UACNG,YAjBN,0YAoBI,kBAAC,IAAD,KACE,wBAAIC,GAAG,SAAP,iBACA,kBAAC,IAAD,CAAKC,UAAU,sBACb,kBAAC,IAAD,CAAKR,GAAI,GACP,2BAAG,yCAAH,qFAAyG,2CAAzG,+CAEF,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAI,kCACR,kBAAC,IAAD,CAAYL,QAAQ,wBAClBC,QAAQ,8EAIhB,kBAAC,IAAD,KA/BO,0IAkCT,kBAAC,IAAD,MAEA,yBAAKW,UAAU,eACb,kBAAC,IAAD,KACE,wBAAID,GAAG,WAAP,uBACA,sOACA,6DAAkC,uBAAGE,KAAK,mDAAR,mBAAlC,kCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEb,QAAQ,kBACRC,QAAQ,wFACRC,OAAO,kCAET,kBAAC,IAAD,CACEF,QAAQ,kBACRC,QAAQ,uFACRC,OAAO,kCAET,kBAAC,IAAD,CACEF,QAAQ,kBACRC,QAAQ,2FACRC,OAAO,mCAGX,kBAAC,OAAD,CAAMG,GAAG,iCACP,kBAAC,IAAD,CAAQS,KAAK,MAAb,oBAKN,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIH,GAAG,WAAU,kBAAC,IAAD,MAAjB,iBAA0C,0CAC1C,2BACE,yCADF,mEAEqB,yCAFrB,qIAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEX,QAAQ,wBACRC,QAAQ,kFACRC,OAAO,mCAET,kBAAC,IAAD,CACEF,QAAQ,mCACRC,QAAQ,qHACRC,OAAO,0CAET,kBAAC,IAAD,CACEF,QAAQ,mCACRC,QAAQ,yFACRC,OAAO,0CAET,kBAAC,IAAD,CACEF,QAAQ,6BACRC,QAAQ,mEACRC,OAAO,wBAET,kBAAC,IAAD,CACEF,QAAQ,qCACRC,QAAQ,iFACRC,OAAO,iCAET,kBAAC,IAAD,CACEF,QAAQ,iCACRC,QAAQ,8EACRC,OAAO,wCAET,kBAAC,IAAD,CACEF,QAAQ,sCACRC,QAAQ,wGACRC,OAAO,8CAET,kBAAC,IAAD,CACEF,QAAQ,0CACRC,QAAQ,8BACRC,OAAO,0CAET,kBAAC,IAAD,CACEF,QAAQ,wCACRC,QAAQ,2BACRC,OAAO,0CAET,kBAAC,IAAD,CACEF,QAAQ,wCACRC,QAAQ,2BACRC,OAAO,0CAET,kBAAC,IAAD,CACEF,QAAQ,gCACRC,QAAQ,uFACRC,OAAO,6BAKb,kBAAC,IAAD,MAEA,yBAAKU,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBG,aAAc,aAIvC,kBAAC,IAAD,MAEA,yBAAKH,UAAU,cAAcD,GAAG,WAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAoBK,YAAY,mBAIpC,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGF,kBAAC,IAAD,S,kCC5KN,sGAMMC,EAAU,CAAC,iBAAkB,yBAA0B,wBAI9C,SAASC,EAAT,GAA2C,IAArBlB,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE5C,GAAIgB,EAAQE,SAASnB,GACnB,OACE,mCAGJ,IAuBMoB,EAvBOC,yBAAe,cAuBTC,QAAQC,MAAMC,MAAK,SAACC,GACrC,OAAOA,EAAEC,KAAKC,KAAKR,SAASnB,MAG9B,OAAKoB,EAKH,oCACE,yBAAKR,UAAU,uBACb,kBAAC,IAAD,CACEgB,IAAK5B,EACL6B,MAAOT,EAAMM,KAAKI,gBAAgBD,MAClCjB,UAAU,kBAEZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBACb,2BAAIX,OAbL,O,kCC7CX,kFAMI8B,EAAO,aAIPC,EAAe,IAAMC,YAAW,SAAUC,EAAMC,GAClD,IAAIC,EAAWF,EAAKE,SAChBT,EAAOO,EAAKP,KACZf,EAAYsB,EAAKtB,UACjByB,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAWL,EAAKK,SAChBC,EAAQN,EAAKM,MACbC,EAAWP,EAAKO,SAChBC,EAAWR,EAAKQ,SAChBC,EAAQ,YAA8BT,EAAM,CAAC,WAAY,OAAQ,YAAa,UAAW,OAAQ,WAAY,QAAS,WAAY,aAElIU,EAAY,oBAAS,GACrBC,EAAUD,EAAU,GACpBE,EAAaF,EAAU,GAEvBG,EAAc,uBAAY,SAAUC,GACb,UAArBA,EAAEC,OAAOC,SAAqBJ,GAAW,KAC5C,IACCK,EAAa,uBAAY,SAAUH,GACZ,UAArBA,EAAEC,OAAOC,SAAqBJ,GAAW,KAC5C,IACH,OAAoB,IAAMM,cAAc,IAAQ,YAAS,GAAIT,EAAO,CAClER,IAAKA,EACLvB,UAAW,IAAWA,EAAWiC,GAAW,QAASJ,GAAY,YACjEH,UAAMe,EACNC,SAAUjB,EACVkB,GAAI,UACW,IAAMH,cAAc,QAAS,CAC5CzB,KAAMA,EACNW,KAAMA,EACNE,MAAOA,EACPL,IAAKO,EACLc,aAAc,MACdnB,UAAWA,EACXI,WAAYA,EACZgB,QAASV,EACTW,OAAQP,EACRZ,SAAUA,GAAYR,IACpBK,MAENJ,EAAa2B,YAAc,eACZ,O,4KC1CXC,EAAc,IAAM3B,YAAW,SAAUC,EAAMC,GACjD,IAAI0B,EAAW3B,EAAK2B,SAChB/C,EAAOoB,EAAKpB,KACZgD,EAAS5B,EAAK4B,OACdC,EAAW7B,EAAK6B,SAChBnD,EAAYsB,EAAKtB,UACjBoD,EAAU9B,EAAKqB,GACfU,OAAwB,IAAZD,EAAqB,MAAQA,EACzCE,EAAO,YAA8BhC,EAAM,CAAC,WAAY,OAAQ,SAAU,WAAY,YAAa,OAEnGiC,EAAS,YAAmBN,EAAU,aACtCO,EAAYD,EAEhB,OADIJ,IAAUK,EAAYD,EAAS,aACf,IAAMf,cAAca,EAAW,YAAS,GAAIC,EAAM,CACpE/B,IAAKA,EACLvB,UAAW,IAAWA,EAAWwD,EAAWtD,GAAQqD,EAAS,IAAMrD,EAAMgD,GAAUK,EAAS,iBAGhGP,EAAYD,YAAc,cAC1BC,EAAYS,aAxBO,CACjBN,UAAU,EACVD,QAAQ,EACRQ,KAAM,SAsBO,QC9BFC,EAAuB,CAChCC,QAAS,CACL9D,YAAa,GACb+D,OAAQ,4DACRC,WAAY,GACZC,WAAY,CACR,CAAEhD,KAAM,OAAQjB,YAAa,wBAAyB4B,KAAM,UAAWsC,aAAc,eACrF,CAAEjD,KAAM,KAAMjB,YAAa,kCAAmC4B,KAAM,UAAWsC,aAAc,eAC7F,CAAEjD,KAAM,QAASjB,YAAa,oBAAqB4B,KAAM,UAAWsC,aAAc,iBAG1FC,OAAQ,CACJnE,YAAa,GACb+D,OAAQ,+DACRC,WAAY,GACZC,WAAY,CACR,CAAEhD,KAAM,QAASjB,YAAa,wBAAyB4B,KAAM,UAAWsC,aAAc,eACtF,CAAEjD,KAAM,KAAMjB,YAAa,kCAAmC4B,KAAM,UAAWsC,aAAc,eAC7F,CAAEjD,KAAM,QAASjB,YAAa,qBAAsB4B,KAAM,SAAUsC,aAAc,kB,UCP/E,SAASE,EAAT,GAAgD,IAL3CC,EAK0BhE,EAAgB,EAAhBA,aAGpCiE,EAAeT,EAAqBxD,GAHgB,EAMRkE,IAAMC,SAASF,EAAaL,WAAW,GAAGhD,MAArFwD,EANmD,KAMhCC,EANgC,KAOpDC,EAAwBL,EAAaL,WAAWW,QAAO,SAAAC,GAAK,OAAIA,EAAM5D,OAASwD,KAAmB,GAElGK,EAAaR,EAAaL,WAAWc,KACvC,SAACC,EAAMC,GAAP,OACI,kBAAC3D,EAAA,EAAD,CACIM,KAAK,QACLgB,QAAQ,EACRsC,IAAKD,EACL/E,UAAW,iBACXiF,QAAQ,YACR/E,KAAK,KACL0B,MAAOkD,EAAK/D,KACZU,QAAS8C,IAAsBO,EAAK/D,KACpCY,SAAU,SAACS,GAAD,OAAOoC,EAAqBpC,EAAE8C,cAActD,SAErDkD,EAAK/D,SAIlB,OACI,oCACI,wBAAIhB,IAjCIoE,EAiCWhE,eAhCV,iBAANgE,EAAuB,GAC3BA,EAAEgB,OAAO,GAAGC,cAAgBjB,EAAEkB,MAAM,KA+BnC,MAAgE,8BAAOlF,GAAvE,uBAA+G,uBAAGmF,MAAO,CAAEC,WAAY,OAAQC,SAAU,QAAUvF,KAAMmE,EAAaP,QAAvE,mBAC/G,kBAAC,EAAD,CAAaX,QAAM,GAAE0B,GACrB,6BACI,wCACA,mCAAcH,EAAsB3E,cAGxC,6BACA","file":"component---src-pages-boxplot-js-448d5bcc35a67bdb11d2.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Button, Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport FunctionExploration from '../components/FunctionExploration'\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/caveat/boxplot.html'>boxplot</a> summarizes the distribution of a numeric variable for one or several groups. It allows to quickly get the median, quartiles and outliers but also hides the dataset individual data points. In python, boxplots are most of time done thanks to the <code>boxplot</code> function of the <code>Seaborn</code> library.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\nsns.boxplot( x=df[\"species\"], y=df[\"sepal_length\"] )\n`\n\nexport default function Boxplot() {\n\n  return (\n\n    <Layout title=\"Boxplot\" isTocEnabled seoDescription=\"A collection of boxplot examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Boxplot\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Seaborn</code> is definitely the best library to quickly build a boxplot. It offers a dedicated <code>boxplot()</code> function that roughly works as follows:ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/30-basic-boxplot-with-seaborn\"}>\n              <ChartImage imgName=\"30_Basic_Box_seaborn2\"\n                caption=\"Basic boxplot with Python and Seaborn from various data input formats.\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; Mind the boxplot</h2>\n          <p>A boxplot is an awesome way to summarize the distribution of a variable. However it hides the real distribution and the sample size. Check the 3 charts below that are based on the exact same dataset.</p>\n          <p>To read more about this, visit <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">data-to-viz.com</a> that has a dedicated article.</p>\n          <Row>\n            <ChartImageContainer\n              imgName=\"39_Bad_boxplot1\"\n              caption=\"Basic boxplot. You can quickly read the median, quartiles and outliers of each group.\"\n              linkTo=\"/39-hidden-data-under-boxplot\"\n            />\n            <ChartImageContainer\n              imgName=\"39_Bad_boxplot2\"\n              caption=\"If you add individual points with jitter, a bimodal distribution appears for group B\"\n              linkTo=\"/39-hidden-data-under-boxplot\"\n            />\n            <ChartImageContainer\n              imgName=\"39_Bad_boxplot3\"\n              caption=\"If you have a very large dataset, the violin plot is a better alternative than jittering\"\n              linkTo=\"/39-hidden-data-under-boxplot\"\n            />\n          </Row>\n          <Link to=\"/39-hidden-data-under-boxplot\">\n            <Button size=\"sm\">Code and more</Button>\n          </Link>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Boxplots with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. The <code>boxplot</code> function should get you started in minutes. The examples below aim at showcasing the various possibilities this function offers.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"30_Basic_Box_seaborn2\"\n            caption=\"Let's start basic. The most simple boxplot, based on 3 differents input formats\"\n            linkTo=\"/30-basic-boxplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"33_Custom_Boxplot_color_Seaborn5\"\n            caption=\"Everything you need concerning color customization on your boxplot: transparency, palette in use, manual control..\"\n            linkTo=\"/33-control-colors-of-boxplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"33_Custom_Boxplot_color_Seaborn4\"\n            caption=\"Learn how to highlight a specific group in the dataset to make your point more obvious\"\n            linkTo=\"/33-control-colors-of-boxplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"34_Grouped_Boxplot_Seaborn\"\n            caption=\"If you have group and subgroups, you can build a grouped boxplot\"\n            linkTo=\"/34-grouped-boxplot\"\n          />\n          <ChartImageContainer\n            imgName=\"35_Specific_order_Boxplot_Seaborn1\"\n            caption=\"Control the order of groups in the boxplot. It makes the chart more insightful\"\n            linkTo=\"/35-control-order-of-boxplot\"\n          />\n          <ChartImageContainer\n            imgName=\"36_Boxplot_with_Jitter_Seaborn\"\n            caption=\"To avoid hiding information, you can add individual data points with jitter\"\n            linkTo=\"/36-add-jitter-over-boxplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"38_Number_of_obs_on_boxplot_seaborn\"\n            caption=\"Since individual data points are hidden, it is a good practice to show the sample size under each box\"\n            linkTo=\"/38-show-number-of-observation-on-boxplot\"\n          />\n          <ChartImageContainer\n            imgName=\"32_Custom_Boxplot_Appearance_Seaborn1-1\"\n            caption=\"Customization: border width\"\n            linkTo=\"/32-custom-boxplot-appearance-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"32_Custom_Boxplot_Appearance_Seaborn2\"\n            caption=\"Customization: use notch\"\n            linkTo=\"/32-custom-boxplot-appearance-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"32_Custom_Boxplot_Appearance_Seaborn3\"\n            caption=\"Customization: box width\"\n            linkTo=\"/32-custom-boxplot-appearance-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"54_Grouped_violinplot_Seaborn\"\n            caption=\"If you have both groups and subgroups, you'll be interested in a grouped violin plot\"\n            linkTo=\"/54-grouped-violinplot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration functionName={\"violin\"} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","export const functionDescriptions = {\n    kdeplot: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"fill\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'control the color', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    },\n    violin: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.violinplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"width\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'controls the color', type: 'string', relatedChart: '70_deffffed' }\n        ]\n    }\n}\n\n\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { functionDescriptions } from \"../util/functionDescriptions\";\nimport './functionExploration.css'\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport default function FunctionExploration({ functionName }) {\n\n    // Get the right function\n    const functionInfo = functionDescriptions[functionName]\n\n    // Get the right parameter\n    const [selectedParameter, setSelectedParameter] = React.useState(functionInfo.parameters[0].name)\n    const selectedParameterInfo = functionInfo.parameters.filter(param => param.name === selectedParameter)[0]\n\n    const allButtons = functionInfo.parameters.map(\n        (item, i) =>\n            <ToggleButton\n                type=\"radio\"\n                active={true}\n                key={i}\n                className={\"functionButton\"}\n                variant=\"secondary\"\n                size=\"sm\"\n                value={item.name}\n                checked={selectedParameter === item.name}\n                onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n            >\n                {item.name}\n            </ToggleButton>\n    )\n\n    return (\n        <>\n            <h2 id={capitalize(functionName + \"()\" + \" details\")}>&#128270; <code>{functionName}</code> function parameters<a style={{ marginLeft: \"15px\", fontSize: \"14px\" }} href={functionInfo.docUrl}>&rarr; see full doc</a></h2>\n            <ButtonGroup toggle>{allButtons}</ButtonGroup>\n            <div>\n                <code>string</code>\n                <span>&rarr; {selectedParameterInfo.description}</span>\n            </div>\n            {/* <div style={{ paddingLeft: \"6px\", fontSize: \"14px\" }}><Link to={selectedParameterInfo.relatedChart}>check a chart using it</Link></div> */}\n            <br />\n            <br />\n        </>\n    )\n}\n"],"sourceRoot":""}