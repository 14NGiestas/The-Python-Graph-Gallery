{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/components/TitleAndDescription.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/pages/index.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","TitleAndDescription","title","description","chartInfo","chart","id","dangerouslySetInnerHTML","__html","style","marginTop","fullUrlToInternalLink","pythonURL","size","label","href","dataToVizURL","Col","prefix","spans","span","offset","order","_propValue$span","length","Home","seoDescription","chartFamily","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","key","xs","md"],"mappings":"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","file":"component---src-pages-index-js-177f3af34ce590a4df8e.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import \"./titleAndDescription.css\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport SocialMediaButtons from \"./SocialMediaButtons\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"gatsby\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n// import Sponsors from \"../components/Sponsors\";\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <>\n      <div className=\"titleAndDescription\">\n        <h1 className=\"mainTitle\">{title}</h1>\n        <hr className=\"smallHr\" />\n        <SocialMediaButtons />\n        <div\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        {chartType && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + \" section\"}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n      {/* <Sponsors /> */}\n    </>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  chartType: PropTypes.string\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Spacing from \"../components/Spacing\";\n\nconst siteDescription =\n  \"<p>Welcome to the Python Graph Gallery, a collection of hundreds of charts made with <code>Python</code>. Charts are organized in about 40 sections and always come with their associated reproducible code. They are mostly made with <code>Matplotlib</code> and <code>Seaborn</code> but other library like <code>Plotly</code> are sometimes used.</p>\";\n\nexport default function Home() {\n  return (\n    <Layout title=\"Python Graph Gallery\" seoDescription=\"The Python Graph Gallery displays hundreds of charts made with Python, always with explanation and reproduciible code\">\n      <TitleAndDescription\n        title=\"The Python Graph Gallery\"\n        description={siteDescription}\n      />\n      <Container>\n        <ChartFamilySection chartFamily=\"distribution\" />\n        <ChartFamilySection chartFamily=\"correlation\" />\n        <ChartFamilySection chartFamily=\"ranking\" />\n        <ChartFamilySection chartFamily=\"partOfAWhole\" />\n        <ChartFamilySection chartFamily=\"evolution\" />\n        <ChartFamilySection chartFamily=\"map\" />\n        <ChartFamilySection chartFamily=\"flow\" />\n        <ChartFamilySection chartFamily=\"general\" />\n\n        <Spacing />\n\n        <Contact />\n\n        <Spacing />\n\n      </Container>\n    </Layout>\n  );\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}