{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./src/components/ChartImageContainer.js","webpack:///./src/components/ChartImage.js","webpack:///./src/pages/circular-barplot.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","ChartImageContainer","imgName","linkTo","xs","md","allGifs","ChartImage","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","Heatmap","title","description","id","style","maxWidth","margin","padding","chartFamily","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","chart","fullUrlToInternalLink","pythonURL","key","label"],"mappings":"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","file":"component---src-pages-circular-barplot-js-f40580716e84217879db.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport Spacing from \"../components/Spacing\";\nimport { Link } from \"gatsby\";\nimport ChartImage from \"../components/ChartImage\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/circularbarplot.html'>circular barplot</a> is pretty much the same as a <a href='https://www.python-graph-gallery.com/barplot'>barplot</a>, but using polar coordinates instead of cartesian coordinates. They are a bit tricky to build with <code>Python</code> and less accurate than usual barplot, but they come with an eye-catching effect that sometimes make them worth it.</p>\";\n\n\nexport default function Heatmap() {\n\n  return (\n\n    <Layout title=\"Circular Barplot\">\n\n      <TitleAndDescription\n        title=\"Circular Barplot\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Circular barplot with <code>Matplotlib</code></h2>\n        <p>\n          <code>Matplotlib</code> allows to build circular barplots thanks to the <code>polar</code> Layout\n          option of the <code>subplot()</code> function. Examples below should guide you from\n          the most simple version to some more customization.\n        </p>\n        <p>It starts by explaining how the polar coordinates of <code>matplotlib</code> works, show how to use it to draw bars\n          and finally goes into the trickiness of adding labels.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"circular-barplot-basic1\"\n            caption=\"Explanation of the polar coordinates with Matplotlib.\"\n            linkTo=\"/circular-barplot-basic\"\n          />\n          <ChartImageContainer\n            imgName=\"circular-barplot-basic2\"\n            caption=\"Most basic circular barplot with Python and Matplotlib.\"\n            linkTo=\"/circular-barplot-basic\"\n          />\n          <ChartImageContainer\n            imgName=\"circular-barplot-basic4\"\n            caption=\"Reorder items.\"\n            linkTo=\"/circular-barplot-basic\"\n          />\n        </Row>\n        <div style={{ maxWidth: \"800px\", margin: \"0 auto\", padding: 30 }}>\n          <Link to='/circular-barplot-basic'>\n            <ChartImage imgName={'circular-barplot-basic3'} caption={'Circular barplot with labels'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}