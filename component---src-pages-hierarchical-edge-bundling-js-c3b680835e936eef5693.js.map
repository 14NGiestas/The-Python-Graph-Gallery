{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/pages/hierarchical-edge-bundling.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/Spacing.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","Arc","title","isTocEnabled","description","id","href","size","style","maxWidth","margin","padding","imgName","chartFamily","Col","prefix","spans","span","offset","order","_propValue$span","length","allGifs","ChartImage","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","Spacing","height","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","allLogos","chart","fullUrlToInternalLink","pythonURL","key","xs","md","label"],"mappings":"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","file":"component---src-pages-hierarchical-edge-bundling-js-c3b680835e936eef5693.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\nimport ChartImage from \"../components/ChartImage\";\n\nconst chartDescription =\n  \"<p><a href='https://www.data-to-viz.com/graph/edge_bundling.html'>Hierarchical edge bundling</a> allows to visualize adjacency relations between entities organized in a hierarchy. The idea is to bundle the adjacency edges together to decrease the clutter usually observed in complex networks.\";\n\n\nexport default function Arc() {\n\n  return (\n\n    <Layout title=\"Hierarchical Edge Bundling\" isTocEnabled>\n      <TitleAndDescription\n        title=\"Hierarchical Edge Bundling\"\n        description={chartDescription}\n      />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Python\">üòû Sadness and Despair for Hierarchical Edge Bundling with <code>Python</code>.</h2>\n          <p>\n            As far as I know, there isn't any proper way to build a hierarchical edged bundling plot with python üòû. If you're aware of any tip to build it, please let me knwo! My contact is provided below üôèüèΩ.\n        </p>\n          <p>You now have 3 options!</p>\n          <ul>\n            <li>Use an alternative chart type. See the <code>related chart</code> section below.</li>\n            <li>Use <code>R</code> or <code>D3.js</code> instead of <code>python</code>, links are provided below as well.</li>\n            <li>Build a Python library allowing to build them! I would love to share it here! üòä</li>\n          </ul>\n        </Container>\n      </div>\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Other languages\">Hierarchical Edge Bundling with <code>R</code> or <code>Javascript</code></h2>\n        <p>\n          Contrary to <code>python</code> that is not of much help to build an arc diagram, <code>R</code> and <code>Javascript</code> both offer built-in functions\n          to make them. <code>R</code> will be more adapted if you're a data analyst and are happy with a static version. <code>Javascript</code> and the\n          <code>d3.js</code> library offers more customization and interactivity options, but comes with a steeper learning curve and a lot\n          of line of code. Pick your flavor!\n        </p>\n        <a href=\"https://www.r-graph-gallery.com/hierarchical-edge-bundling\">\n          <Button size=\"sm\">R code</Button>\n        </a>\n        <a href=\"https://www.d3-graph-gallery.com/bundle\">\n          <Button size=\"sm\">Javascript code</Button>\n        </a>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <a href='/405-dendrogram-with-heatmap-and-coloured-leaves'>\n            <ChartImage imgName={'hierarchical-edge-bundling-R'} caption={'Hierarchical edge bundling with R'} />\n          </a>\n        </div>\n      </Container >\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"flow\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Spacing() {\n\n  return (<div className=\"spacing\" style={{ height: 140 }}></div>)\n\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}