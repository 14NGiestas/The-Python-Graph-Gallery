{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/pages/radar-chart.js","webpack:///./src/components/TitleAndDescription.js","webpack:///./src/components/ChartImageContainer.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/ChartFamilySection.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","logoToKeep","SpiderAlternativeLogos","allLogos","chart","id","fullUrlToInternalLink","pythonURL","key","xs","md","label","Radar","title","isTocEnabled","seoDescription","description","href","imgName","linkTo","chartFamily","TitleAndDescription","chartInfo","dangerouslySetInnerHTML","__html","style","marginTop","size","dataToVizURL","ChartImageContainer","Col","prefix","spans","span","offset","order","_propValue$span","length","allGifs","ChartImage","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection"],"mappings":"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","file":"component---src-pages-radar-chart-js-093857b661327ee32276.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport ChartImage from \"../components/ChartImage\";\nimport SectionLogoWithOverlay from \"../components/SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\"\nimport { fullUrlToInternalLink } from \"../util/utils\";\nimport Spacing from \"../components/Spacing\";\n\nconst logoToKeep = ['lollipop', 'parallel', 'barplot', 'stackedBar']\nconst SpiderAlternativeLogos = () => {\n  const allLogos = chartTypesInfo\n    .filter((chart) => logoToKeep.includes(chart.id))\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/caveat/spider.html'>radar chart</a> (or <a href='https://www.data-to-viz.com/caveat/spider.html'>spider plot</a>, or <a href='https://www.data-to-viz.com/caveat/spider.html'>polar chart</a>) allows to visualize one or more series of values over multiple quantitative variables. Each variable has its own axis, all axes are joined in the center of the figure. This section shows how to build it with <code>Matplotlib</code>, but keep in mind they are some <a href='https://www.data-to-viz.com/caveat/spider.html'>caveats</a> associated with this chart type.</p>\";\n\nexport default function Radar() {\n\n  return (\n\n    <Layout title=\"Radar chart\" isTocEnabled seoDescription=\"A collection of radar chart examples made with Python, coming with explanation and reproducible code\">\n      <TitleAndDescription\n        title=\"Radar Chart\"\n        description={chartDescription}\n      />\n\n      <div className=\"greySection\" id=\"warning\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; Radar chart are criticized</h2>\n          <p>Spider plots are somewhat criticized. The <u>variable order</u> has\n          a huge impact on the chart appearance, <u>scales</u> can be\n          skewed, <u>overplotting</u> makes it hard to\n          read and <u>over-evaluation</u> of differences are the main arguments.\n          </p>\n          <p>You should probably read <a href='https://www.data-to-viz.com/caveat/spider.html'>this article</a> that explains the issues more in depth before building one,\n          and consider switching to one of the alternative below:\n          </p>\n          <SpiderAlternativeLogos />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib /> Radar chart with <code>Matplotlib</code></h2>\n        <p>\n          As far as I know there isn't any library offering a function to build a\n          spider plot quickly. Fortunately, <code>Matplotlib</code> allows a very high\n          level of customization. With a bit of trigonometry and the <code>plot()</code> function you\n          should get your desired viz.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"390_basic_Radarchart\"\n            caption=\"Most basic radar chart with python.\"\n            linkTo=\"/390-basic-radar-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"391_Several_indiv_Radarchart\"\n            caption=\"Radar chart with several displayed values\"\n            linkTo=\"/391-radar-chart-with-several-individuals\"\n          />\n        </Row>\n        <p>Radar charts are often used in combination with faceting. It allows to compare the features\n        of several groups, what would be unreadable if plotted on the same chart.\n          </p>\n        <Link to={\"/392-use-faceting-for-radar-chart\"}>\n          <ChartImage imgName=\"393_Faceting_and_Radarchart\"\n            caption=\"A polar chart with small multiple to compare 4 groups\" />\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./titleAndDescription.css\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport SocialMediaButtons from \"./SocialMediaButtons\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"gatsby\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n// import Sponsors from \"../components/Sponsors\";\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <>\n      <div className=\"titleAndDescription\">\n        <h1 className=\"mainTitle\">{title}</h1>\n        <hr className=\"smallHr\" />\n        <SocialMediaButtons />\n        <div\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        {chartType && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + \" section\"}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n      {/* <Sponsors /> */}\n    </>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  chartType: PropTypes.string\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={caption}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}