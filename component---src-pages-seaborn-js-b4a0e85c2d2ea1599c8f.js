(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{"2mCb":function(e,t,a){},"59G+":function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var l=a("q1tI"),o=a.n(l),n=a("eynx"),i=a("JI6e"),r=a("Wbzz");function c(e){var t=e.imgName,a=e.caption,l=e.linkTo;return o.a.createElement(i.a,{xs:12,md:4},o.a.createElement(r.a,{to:l},o.a.createElement(n.a,{imgName:t,caption:a})))}},eynx:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));a("2mCb");var l=a("q1tI"),o=a.n(l),n=a("Wbzz"),i=a("9eSz"),r=a.n(i),c=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function m(e){var t=e.imgName,a=e.caption;if(c.includes(t))return o.a.createElement("p",null,"TODO");var l=Object(n.c)("3289484431").allFile.edges.find((function(e){return e.node.name.includes(t)}));return l?o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"chartImageContainer"},o.a.createElement(r.a,{alt:t,fluid:l.node.childImageSharp.fluid,className:"chartImageImg"}),o.a.createElement("div",{className:"chartImageOverlay"},o.a.createElement("div",{className:"chartImageOverlayText"},o.a.createElement("p",null,a))))):null}},n62X:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return _}));var l=a("q1tI"),o=a.n(l),n=a("4/Vk"),i=a("7oih"),r=a("7vrA"),c=a("6+GL"),m=a("3Z9Z"),s=a("59G+"),u=a("pJaR"),p=a("Wbzz"),d=a("Hrqu"),h=a("JI6e"),b=a("ZJrt"),E=a("eynx"),g=a("gMBH"),f=a("cWnB");function _(){return o.a.createElement(i.a,{title:"Seaborn",isTocEnabled:!0},o.a.createElement(n.a,{title:"Seaborn",description:"<p><code>Seaborn</code> is a python graphic library built on top of <a href='https://www.python-graph-gallery.com/matplotlib'>matplotlib</a>. It allows to make your charts prettier with less code. This page provides general seaborn tips. Visit individual chart sections if you need a specific type of plot. Note that most of the <a href='https://www.python-graph-gallery.com/matplotlib'>matplotlib customization options</a> also work for <code>seaborn</code>.</p > "}),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Quick start"},"‚è± Quick start"),o.a.createElement(m.a,{className:"align-items-center"},o.a.createElement(h.a,{md:6},o.a.createElement("p",null,o.a.createElement("code",null,"seaborn")," offers some specific functions for almost every kind of charts. For instance, ",o.a.createElement("code",null,"regplot()")," can be used to build a ",o.a.createElement(p.a,{to:"/scatter-plot"},"scatterplot"),"."),o.a.createElement("p",null,"Note that no additional code is needed to get the nice grey background with grid and some good defaults for the dots üòç. That's 4 lines of code for a pretty decent chart üî•!"),o.a.createElement(p.a,{to:"/scatter-plot"},o.a.createElement(f.a,{size:"sm"},"Scatterplot section"))),o.a.createElement(h.a,{md:6},o.a.createElement(p.a,{to:"/40-basic-scatterplot-seaborn"},o.a.createElement(E.a,{imgName:"40_Basic_Scatterplot_seaborn",caption:"Basic boxplot with Python and Seaborn from various data input formats."})))),o.a.createElement(b.a,null,'# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset(\'iris\')\n\n# use the function regplot to make a scatterplot\nsns.regplot(x=df["sepal_length"], y=df["sepal_width"])\n'),o.a.createElement("br",null)),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Lexicon"},o.a.createElement(d.b,null),"Basic vocabulary"),o.a.createElement("p",null,"Since ",o.a.createElement("code",null,"seaborn")," is built on top of ",o.a.createElement("code",null,"matplotlib"),", most of its concepts and vocabulary are still correct. The figure below describes the anatomy of a ",o.a.createElement("code",null,"matplotlib")," charts. It names all the main components, names that you need to know to understand the documentation properly."),o.a.createElement("p",null,"‚ö†Ô∏è ",o.a.createElement("u",null,"Disclaimer"),": this figure comes from the very complete ",o.a.createElement("a",{href:"https://matplotlib.org/faq/usage_faq.html#coding-styles"},"matplotlib documentation"),". Have a look at it for a thorough explanation on how this library works."),o.a.createElement("div",{style:{maxWidth:"600px",margin:"0 auto",padding:30}},o.a.createElement(E.a,{imgName:"matplotlib_vocabulary",caption:"Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly"})),o.a.createElement("a",{href:"https://matplotlib.org/faq/usage_faq.html#coding-styles"},o.a.createElement(f.a,{size:"sm"},"Matplotlib doc"))),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Main functions"},"üßê Main ",o.a.createElement("code",null,"seaborn")," functions"),o.a.createElement("p",null,"Here is an overview of the most common ",o.a.createElement("code",null,"seaborn")," functions. It provides a glimpse of they're made for, what are their parameters and links to their official doc."),o.a.createElement("p",null,o.a.createElement("code",null,"Todo")," üòû")),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Title"},o.a.createElement(d.e,null),"Customizing titles with Seaborn"),o.a.createElement("p",null,"Since ",o.a.createElement("code",null,"Seaborn")," is built on top of ",o.a.createElement("code",null,"Matplotlib"),", title customization works pretty much the same. A seaborn chart (like the one you get with ",o.a.createElement("code",null,"sns.boxplot()"),") actually returns a ",o.a.createElement("code",null,"matplotlib")," axes instance."),o.a.createElement("p",null,"This means that you will not be able to use the usual ",o.a.createElement("code",null,"pyplot")," method ",o.a.createElement("code",null,"plt.title()"),", but will have to use the corresponding argument for an ",o.a.createElement("code",null,"axes")," which is ",o.a.createElement("code",null,"ax.set_title()"),". This is described more in depth in this dedicated post:"),o.a.createElement(m.a,null,o.a.createElement(s.a,{imgName:"seaborn-title-customization",caption:"Add a title on a seaborn chart",linkTo:"/seaborn-title-customization"})),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("p",null,"Once you've understood how to add a title, customizing it should work the same as for ",o.a.createElement("code",null,"matplotlib"),":"),o.a.createElement(m.a,null,o.a.createElement(s.a,{imgName:"190_Custom_title6",caption:"Python chart with subtitle and custom color",linkTo:"/190-custom-matplotlib-title"}),o.a.createElement(s.a,{imgName:"190_Custom_title7",caption:"Add a math formula in title with Matplotlib",linkTo:"/190-custom-matplotlib-title"}),o.a.createElement(s.a,{imgName:"190_Custom_title5",caption:"Control the height of the matplotlib title",linkTo:"/190-custom-matplotlib-title"}))),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Axis"},o.a.createElement(d.e,null),"Customizing axis"),o.a.createElement("p",null,"The exact same concept than explained for titles above applies for axes. So please read the following blogpost about axis customization with matplotlib and apply it to your seaborn chart."),o.a.createElement(m.a,null,o.a.createElement(s.a,{imgName:"191_Custom_axis1",caption:"Change the axis title and its appearance",linkTo:"/191-custom-axis-on-matplotlib-chart"}),o.a.createElement(s.a,{imgName:"191_Custom_axis2",caption:"Control axis labels and ticks look",linkTo:"/191-custom-axis-on-matplotlib-chart"}),o.a.createElement(s.a,{imgName:"191_Custom_axis6",caption:"Control axis limit with the xlim() function",linkTo:"/191-custom-axis-on-matplotlib-chart"}))),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Themes"},"üåà Seaborn built-in themes"),o.a.createElement("p",null,"Seaborn comes with a few built-in themes. Those themes are available through the ",o.a.createElement("code",null,"set_style()")," function. Here is an overview of what is offered."),o.a.createElement("p",null,o.a.createElement("code",null,"Todo")," üòû")),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement("h2",{id:"Gallery"},"‚≠ê Seaborn graph gallery"),o.a.createElement("p",null,"If you're interested in a specific type of chart like ",o.a.createElement(p.a,{to:"/boxplot"},"boxplot")," or ",o.a.createElement(p.a,{to:"heatmap"},"heatmap"),", I suggest to visit the ",o.a.createElement(p.a,{to:"/"},"dedicated section")," of the gallery. In case you're interested in what ",o.a.createElement("code",null,"seaborn")," can do, here is a glimpse of what's offered in the gallery üßê."),o.a.createElement(m.a,null,o.a.createElement(s.a,{imgName:"82_seaborn_jointplot1",caption:"Histogram can be added around a scatterplot to show each variable distributions",linkTo:"/82-marginal-plot-with-seaborn"}),o.a.createElement(s.a,{imgName:"74_density_plot_multi_variables",caption:"Density chart with several displayed groups",linkTo:"/74-density-plot-of-several-variables"}),o.a.createElement(s.a,{imgName:"43_seaborn_map_color_to_a_avariable3",caption:"Color dots according to a group",linkTo:"/43-use-categorical-variable-to-color-scatterplot-seaborn"}),o.a.createElement(s.a,{imgName:"58_Number_of_obs_on_violinplot_seaborn",caption:"Show the number of observations per group",linkTo:"/58-show-number-of-observation-on-violinplot"}),o.a.createElement(s.a,{imgName:"73_Control_bandwidth_densityplot_Seaborn2",caption:"Changed the bandwidth used to compute the density",linkTo:"/73-control-bandwidth-of-seaborn-density-plot"}),o.a.createElement(s.a,{imgName:"91_Custom_heat_annotate_cells",caption:"Seaborn heatmap customization: show numbers in cell",linkTo:"/91-customize-seaborn-heatmap"}),o.a.createElement(s.a,{imgName:"25_Histogram_of_several_variables1",caption:"Compare the distribution of several groups on the same chart",linkTo:"/25-histogram-with-several-variables-seaborn"}),o.a.createElement(s.a,{imgName:"80_bivariate_kernel_density_plot2",caption:"Basic contourplot with seaborn.",linkTo:"/contour-plot-seaborn"}),o.a.createElement(s.a,{imgName:"111_Correlogram_custom4",caption:"Apply colors to each group and customized the scatterplot",linkTo:"/111-custom-correlogram"}),o.a.createElement(s.a,{imgName:"85_2D_density_plot_matplotlib_1",caption:"Basic 2d density chart.",linkTo:"/85-density-plot-with-matplotlib"}),o.a.createElement(s.a,{imgName:"25_Histogram_of_several_variables2",caption:"Use small multiple to compare the distribution of several groups",linkTo:"/25-histogram-with-several-variables-seaborn"}),o.a.createElement(s.a,{imgName:"82_seaborn_jointplot6",caption:"Histogram can be added around a 2d density chart to show x and y variable distributions",linkTo:"/82-marginal-plot-with-seaborn"}),o.a.createElement(s.a,{imgName:"51_Horizontal_violinplot_Seaborn",caption:"Make your violin chart horizontal to make labels more readable",linkTo:"/51-horizontal-violinplot"}),o.a.createElement(s.a,{imgName:"132_Matplotlib-connected-scatterplot",caption:"Basic connected scatterplot with Python and Seaborn.",linkTo:"/132-basic-connected-scatterplot"}),o.a.createElement(s.a,{imgName:"92_Control_color_heatmap1",caption:"Color customization: how to select other color palettes and more",linkTo:"/92-control-color-in-seaborn-heatmaps"}))),o.a.createElement(g.a,null),o.a.createElement(g.a,null),o.a.createElement("div",{className:"greySection",id:"related"},o.a.createElement(r.a,null,o.a.createElement(u.a,{chartFamily:"evolution"}))),o.a.createElement(g.a,null),o.a.createElement(r.a,null,o.a.createElement(c.a,null)),o.a.createElement(g.a,null))}}}]);
//# sourceMappingURL=component---src-pages-seaborn-js-b4a0e85c2d2ea1599c8f.js.map