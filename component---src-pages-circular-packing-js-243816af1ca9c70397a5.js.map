{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/components/ChartImage.js","webpack:///./src/pages/circular-packing.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","className","alt","fluid","childImageSharp","CircularPacking","title","isTocEnabled","description","id","href","size","style","maxWidth","margin","padding","chartFamily"],"mappings":"uHAAA,+FAMe,SAASA,EAAT,GAA4D,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC9D,OACE,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,IAAD,CAAMC,GAAIH,GACR,kBAAC,IAAD,CAAYF,QAASA,EAASC,QAASA,Q,kCCV/C,sGAMMK,EAAU,CAAC,iBAAkB,yBAA0B,wBAI9C,SAASC,EAAT,GAA2C,IAArBP,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE5C,GAAIK,EAAQE,SAASR,GACnB,OACE,mCAGJ,IAuBMS,EAvBOC,YAAe,cAuBTC,QAAQC,MAAMC,MAAK,SAACC,GACrC,OAAOA,EAAEC,KAAKC,KAAKR,SAASR,MAG9B,OAAKS,EAKH,oCACE,yBAAKQ,UAAU,uBACb,kBAAC,IAAD,CACEC,IAAKlB,EACLmB,MAAOV,EAAMM,KAAKK,gBAAgBD,MAClCF,UAAU,kBAEZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBACb,2BAAIhB,OAbL,O,kCC7CX,oOAoBe,SAASoB,IAEtB,OAEE,kBAAC,IAAD,CAAQC,MAAM,mBAAmBC,cAAY,GAE3C,kBAAC,IAAD,CACED,MAAM,mBACNE,YAXN,gVAcI,yBAAKP,UAAU,cAAcQ,GAAG,WAC9B,kBAAC,IAAD,KACE,wBAAIA,GAAG,YAAP,qBAAiD,0CAAjD,YACA,kCAAO,0CAAP,4GACuB,uBAAGC,KAAK,8BAAR,kBADvB,iBAEG,uBAAGA,KAAK,uCAAR,UAFH,WAGA,sDAA2B,sDAA3B,KACA,uBAAGA,KAAK,uCACN,kBAAC,IAAD,CAAQC,KAAK,MAAb,6BAKN,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIF,GAAG,0BAAyB,kBAAC,IAAD,MAAhC,0BACA,2BACE,0CADF,gOAGwE,4CAHxE,2DAMA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEzB,QAAQ,sCACRC,QAAQ,4BACRC,OAAO,wCAET,kBAAC,IAAD,CACEF,QAAQ,sCACRC,QAAQ,wBACRC,OAAO,wCAET,kBAAC,IAAD,CACEF,QAAQ,sCACRC,QAAQ,gCACRC,OAAO,0CAKb,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIuB,GAAG,kBAAiB,kBAAC,IAAD,MAAxB,+BACA,2BACE,0CADF,sOAG2C,4CAH3C,KAKA,yBAAKG,MAAO,CAAEC,SAAU,QAASC,OAAQ,SAAUC,QAAS,KAC1D,kBAAC,IAAD,CAAM1B,GAAG,iDACP,kBAAC,IAAD,CAAYL,QAAS,qDAAsDC,QAAS,8FAK1F,kBAAC,IAAD,MAEA,yBAAKgB,UAAU,cAAcQ,GAAG,WAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAoBO,YAAY,mBAIpC,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGF,kBAAC,IAAD","file":"component---src-pages-circular-packing-js-243816af1ca9c70397a5.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport ChartImage from \"../components/ChartImage\";\nimport { Button, Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\";\nimport Spacing from \"../components/Spacing\";\n\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/treemap.html'>treemap</a> displays hierarchical data as a set of nested rectangles. Each group is represented by a rectangle, which area is proportional to its value. In <code>Python</code>, the <code>squarify</code> library allows to compute the rectangle positions and plot it.</p>\";\n\n\nexport default function CircularPacking() {\n\n  return (\n\n    <Layout title=\"Circular Packing\" isTocEnabled>\n\n      <TitleAndDescription\n        title=\"Circular Packing\"\n        description={chartDescription}\n      />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Circlify\">&#8505; &#65039; A note on the <code>Circlify</code> package</h2>\n          <p>The <code>circlify</code> package is a pure Python implementation of a circle packing layout algorithm. It\n          has been developped by <a href='https://github.com/elmotec'>Jerome Lecomte</a> and lives\n          on <a href='https://github.com/elmotec/circlify'>github</a>. üôèüôè </p>\n          <p>You can install it with <code>pip install circlify</code>.</p>\n          <a href=\"https://github.com/elmotec/circlify\">\n            <Button size=\"sm\">Circlify documentation</Button>\n          </a>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"One level of hierarchy\"><Matplotlib />One level of hierarchy</h2>\n        <p>\n          <code>Circlify</code> can work without a hierarchical structure, i.e. with\n          just a set of numeric varialbles that will be each displayed as a bubble. Note that the package\n          just compute the position and size of each bubble. Once tha\"t's done, <code>matplotlib</code> is used to make\n          the chart itself with usual functions.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"circular-packing-1-level-hierarchy1\"\n            caption=\"Most basic circle packing\"\n            linkTo=\"/circular-packing-1-level-hierarchy\"\n          />\n          <ChartImageContainer\n            imgName=\"circular-packing-1-level-hierarchy2\"\n            caption=\"Add colors and labels\"\n            linkTo=\"/circular-packing-1-level-hierarchy\"\n          />\n          <ChartImageContainer\n            imgName=\"circular-packing-1-level-hierarchy3\"\n            caption=\"control space between bubbles\"\n            linkTo=\"/circular-packing-1-level-hierarchy\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Several levels\"><Matplotlib />Several levels of hierarchy</h2>\n        <p>\n          <code>Circlify</code> also works from a hierarchical structure. Bubbles representing the bottom\n          of the hierarchy are encapsulated into higher hierarchy bubbles and so on. Note that the process is a bit more\n          tedious here, but still doable thanks to <code>matplotlib</code>.\n        </p>\n        <div style={{ maxWidth: \"800px\", margin: \"0 auto\", padding: 30 }}>\n          <Link to='/circular-packing-several-levels-of-hierarchy'>\n            <ChartImage imgName={'circular-packing-several-levels-of-hierarchy-large'} caption={'Circular packing with several levels of hierarchy with Python and the circlize library'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"partOfAWhole\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"sourceRoot":""}