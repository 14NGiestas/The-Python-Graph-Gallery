{"version":3,"sources":["webpack:///./src/pages/plotly.js","webpack:///./src/components/ChartImage.js"],"names":["Plotlys","title","isTocEnabled","seoDescription","description","id","className","md","to","imgName","caption","src","style","border","width","height","size","chartFamily","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp"],"mappings":"qHACA,oOAyCe,SAASA,IAEtB,OAEE,kBAAC,IAAD,CAAQC,MAAM,SAASC,cAAY,EAACC,eAAe,+EAEjD,kBAAC,IAAD,CACEF,MAAM,SACNG,YAjCN,gYAoCI,kBAAC,IAAD,KACE,wBAAIC,GAAG,SAAP,iBACA,kBAAC,IAAD,CAAKC,UAAU,sBACb,kBAAC,IAAD,CAAKC,GAAI,GACP,2BAAG,4CAAH,kHAAyI,yCAAzI,sCAEA,yFAA8D,iEAA9D,yDAAgK,qCAAhK,aAEF,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAI,yBACR,kBAAC,IAAD,CAAYC,QAAQ,uBAClBC,QAAQ,yEAIhB,kBAAC,IAAD,KAjDO,sKAoDT,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIL,GAAG,QAAP,2BACA,oDAAyB,wCAAzB,uDAC6B,sCAD7B,8DAGA,kEAAuC,wCAAvC,yCACQ,kBAAC,OAAD,CAAMG,GAAG,oCAAT,QADR,kBAGA,kBAAC,IAAD,KAjDM,kDAoDR,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIH,GAAG,SAAP,6BACA,wGACA,kBAAC,IAAD,KAxDO,yIA2DT,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,wBAAIA,GAAG,WAAU,kBAAC,IAAD,MAAjB,wBACA,+FACA,yBAAKC,UAAU,WACb,4BAAQK,IAAI,0DAA0DV,MAAM,wCAAwCW,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAASC,OAAQ,YAEvK,kBAAC,OAAD,CAAMP,GAAG,oCACP,kBAAC,IAAD,CAAQQ,KAAK,MAAb,cAMJ,kBAAC,IAAD,MAEA,kBAAC,IAAD,MACA,yBAAKV,UAAU,cAAcD,GAAG,WAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAoBY,YAAY,cAIpC,kBAAC,IAAD,MAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGF,kBAAC,IAAD,S,kCC3HN,sGAMMC,EAAU,CAAC,iBAAkB,yBAA0B,wBAI9C,SAASC,EAAT,GAA2C,IAArBV,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE5C,GAAIQ,EAAQE,SAASX,GACnB,OACE,mCAGJ,IAuBMY,EAvBOC,yBAAe,cAuBTC,QAAQC,MAAMC,MAAK,SAACC,GACrC,OAAOA,EAAEC,KAAKC,KAAKR,SAASX,MAG9B,OAAKY,EAKH,oCACE,yBAAKf,UAAU,uBACb,kBAAC,IAAD,CACEuB,IAAKnB,EACLoB,MAAOT,EAAMM,KAAKI,gBAAgBD,MAClCxB,UAAU,kBAEZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBACb,2BAAII,OAbL","file":"component---src-pages-plotly-js-7f47b5c55fa3e03426ed.js","sourcesContent":["\nimport React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Plotly } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\n\nconst chartDescription =\n  \"<p><code>Plotly</code> is a javascript library for data visualization. It is based on the famous <a href='https://www.d3-graph-gallery.com'>d3.js</a> library, and provides a python wrapper allowing to build stunning interactive charts directly from <code>Python</code>. Most of the gallery sections provide <code>plotly</code> examples, this post provides a few general tips.</p>\";\n\nconst quickCode = `# library\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create data\nx=range(1,6)\ny=[1,4,6,8,4]\n\n# Area plot\nplt.fill_between(x, y)\nplt.show()\n`\n\nconst saveCode = `fig.write_html(\"the/path/to/chart-name.html\")`\nconst embedCode = `<iframe\n  src=\"the/path/to/chart-name.html\"\n  width=\"800\"\n  height=\"600\"\n  title=\"chart name\"\n  style=\"border:none\">\n</iframe>`\n\n\nexport default function Plotlys() {\n\n  return (\n\n    <Layout title=\"Plotly\" isTocEnabled seoDescription=\"An overview of the plotly python library for interactive data visualization\">\n\n      <TitleAndDescription\n        title=\"Plotly\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Matplotlib</code> is the most famous python data visualization library. It is widely used and most of other viz libraries (like <code>seaborn</code>)\n            are actually built on top of it.</p>\n            <p>Once installed, matplotlib must be imported, usually using <code>import matplotlib.pyplot as plt</code>. You can then use use the functions available in the <code>plt</code> object.</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/240-basic-area-chart\"}>\n              <ChartImage imgName=\"240_basic_area_chart\"\n                caption=\"The most basic area chart one can make with python and matplotlib\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Save\">&#9201; Saving a plotly chart</h2>\n        <p>Once you've created a <code>plotly</code> chart you probably want\n          to save it as a standalone <code>html</code> file in order to share\n          it or embed it in another webpage.</p>\n        <p>This is the code allowing to save a <code>plotly</code> chart. You can read the full\n        process <Link to='/parallel-coordinate-plot-plotly'>here</Link> for instance.\n        </p>\n        <CodeChunk>{saveCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Embed\">&#9201; Embeding a plotly chart</h2>\n        <p>Once the chart has been saved, you can embed it in a html document using:</p>\n        <CodeChunk>{embedCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\"><Plotly />Plotly graph gallery</h2>\n        <p>Here is a glimpse of the plotly charts showcased in the gallery:</p>\n        <div className=\"mx-auto\">\n          <iframe src=\"/interactiveCharts/parallel-coordinate-plot-plotly.html\" title=\"parallel coordinate chart with plotly\" style={{ border: \"none\", width: '800px', height: '500px' }}></iframe>\n        </div>\n        <Link to=\"/parallel-coordinate-plot-plotly\">\n          <Button size=\"sm\">\n            See code\n          </Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={caption}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}