{"version":3,"sources":["webpack:///./src/components/SectionLogoWithOverlay.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/components/BannerImage.js","webpack:///./src/components/Sponsors.js","webpack:///./src/components/TitleAndDescription.js","webpack:///./src/components/ChartImageContainer.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/ChartImage.js","webpack:///./src/components/ChartFamilySection.js","webpack:///./src/pages/network-chart.js"],"names":["generalList","chartTypesInfo","filter","info","family","map","logo","SectionLogoWithOverlay","chartType","caption","link","isGeneralFamily","includes","to","className","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","BannerImage","imgName","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","Sponsor","Container","Col","md","href","title","onClick","Spacing","TitleAndDescription","description","chartInfo","chart","id","SocialMediaButtons","dangerouslySetInnerHTML","__html","style","marginTop","fullUrlToInternalLink","pythonURL","Button","size","label","dataToVizURL","ChartImageContainer","linkTo","xs","prefix","spans","span","offset","order","_propValue$span","length","allGifs","ChartImage","TITLES","distribution","correlation","ranking","partOfAWhole","evolution","flow","general","ChartFamilySection","chartFamily","allLogos","key","Network","isTocEnabled","seoDescription"],"mappings":"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","file":"component---src-pages-network-chart-js-8038e634e2520659b077.js","sourcesContent":["import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n          <>\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n          </>\n        )}\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\n// This component displays a logo representing a sponsor of the gallery.\nexport default function BannerImage({ imgName, caption }) {\n\n  const data = useStaticQuery(graphql`\n    query MyQuery3 {\n      allFile(filter: { relativeDirectory: { eq: \"banner\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./sponsors.css\";\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport BannerImage from \"../components/BannerImage\"\nimport Spacing from \"./Spacing\";\n\n// Component that displays a banner with the gallery sponsors\nexport default function Sponsor() {\n  return (\n    <>\n      <div className=\"sponsorsBanner\">\n        <Container>\n          <Row>\n            <Col md={3}>\n              <a\n                href=\"https://www.datacamp.com?tap_a=5644-dce66f&tap_s=230804-f65650\" title=\"Datacamp\"\n                onClick=\"trackOutboundLink('https://www.datacamp.com?tap_a=5644-dce66f&tap_s=230804-f65650'); return false;\">\n                <BannerImage imgName=\"datacamp\" caption={\"Datacamp\"} />\n              </a>\n            </Col>\n            <Col md={3}>\n              <a\n                href=\"https://365datascience.pxf.io/qRPNb\" title=\"365DataScience\"\n                onClick=\"trackOutboundLink('https://365datascience.pxf.io/qRPNb'); return false;\">\n                <BannerImage imgName=\"365_data_science\" caption={\"365 Data Science\"} />\n              </a>\n            </Col>\n            <Col md={3}>\n              <a\n                href=\"https://www.dataquest.io/course/storytelling-data-visualization?utm_source=python%20graph%20gallery&utm_medium=banner&utm_content=storytelling%20with%20data\"\n                onClick=\"trackOutboundLink('https://www.dataquest.io/course/storytelling-data-visualization?utm_source=python%20graph%20gallery&utm_medium=banner&utm_content=storytelling%20with%20data'); return false;\">\n                <BannerImage imgName=\"data-vis-ad\" caption={\"Dataquest\"} />\n              </a>\n            </Col>\n            <Col md={3}>\n              <a\n                href=\"https://gumroad.com/a/280032371/uTxEFw\" title=\"StackAbuse\"\n                onClick=\"trackOutboundLink('https://gumroad.com/a/280032371/uTxEFw'); return false;\">\n                <BannerImage imgName=\"stackabuse\" caption={\"Stack Abuse book\"} />\n              </a>\n            </Col>\n          </Row>\n          {/* <div className='sponsorsLink'>\n            <Link to='/about#Sponsoring'>Wish to support the gallery?</Link>\n          </div> */}\n        </Container>\n      </div>\n      <Spacing />\n    </>\n  );\n\n}\n\n\n","import \"./titleAndDescription.css\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport SocialMediaButtons from \"./SocialMediaButtons\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"gatsby\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\nimport Sponsors from \"../components/Sponsors\";\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <>\n      <div className=\"titleAndDescription\">\n        <h1 className=\"mainTitle\">{title}</h1>\n        <hr className=\"smallHr\" />\n        <SocialMediaButtons />\n        <div\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        {chartType && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + \" section\"}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n      <Sponsors />\n    </>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  chartType: PropTypes.string\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/network.html'>Network diagram</a> (or chart, or graph) show interconnections between a set of entities. Each entity is represented by a node (or vertices). Connection between nodes are represented through links (or edges). This section mainly focuses on <code>NetworkX</code>, probably the best library for this kind of chart with <code>python</code>.\";\n\nexport default function Network() {\n\n  return (\n\n    <Layout title=\"Network chart\" isTocEnabled seoDescription=\"A collection of network chart examples made with Python, coming with explanation and reproducible code\">\n      <TitleAndDescription\n        title=\"Network chart\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"NetworkX\">Network diagram with the <code>NetworkX</code> library</h2>\n        <p>\n          <a href='https://networkx.org'>NetworkX</a> is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks..\n        </p>\n        <p>\n          The examples below will guide you through a migration dataset already discussed in <a href='https://www.data-to-viz.com/graph/chord.html'>data-to-viz.com</a>. It starts\n          by describing the input dataset and the basic usage of the <code>Chord()</code> function.\n        </p>\n        <a href='https://networkx.org'>\n          <Button size=\"sm\">\n            Official doc\n          </Button>\n        </a>\n        <br />\n        <br />\n        <Row>\n          <ChartImageContainer\n            imgName=\"320_Network_start_simple\"\n            caption=\"Most basic network chart with Python and NetworkX\"\n            linkTo=\"/320-basic-network-from-pandas-data-frame\"\n          />\n          <ChartImageContainer\n            imgName=\"321_Network_custom_look4\"\n            caption=\"Custom network appearance: color, shape, size, links\"\n            linkTo=\"/321-custom-networkx-graph-appearance\"\n          />\n          <ChartImageContainer\n            imgName=\"322_Network_layout4\"\n            caption=\"Control the layout used for the node location\"\n            linkTo=\"/322-network-layout-possibilities\"\n          />\n          <ChartImageContainer\n            imgName=\"323_Network_direction1\"\n            caption=\"Manage directed and undirected networks by adding arrows\"\n            linkTo=\"/323-directed-or-undirected-network\"\n          />\n          <ChartImageContainer\n            imgName=\"326_Network_background_color\"\n            caption=\"Control the background color of a network chart\"\n            linkTo=\"/326-background-colour-of-network-chart\"\n          />\n        </Row>\n        <br />\n        <p>A common need when dealing with network charts is to map a numeric or categorical\n        variable to the nodes or edges appearance. This is totally doable and adds some insight\n          to the figure.</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"324_Network_mapcolor1\"\n            caption=\"Map a continuous or categoric variable to nodes\"\n            linkTo=\"/324-map-a-color-to-network-nodes\"\n          />\n          <ChartImageContainer\n            imgName=\"325_Network_mapcolorttoedge1\"\n            caption=\"Map a color to edges\"\n            linkTo=\"/325-map-colour-to-the-edges-of-a-network\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Similarity matrix\">Network chart from similarity matrix</h2>\n        <p>Another commin task is to build a network chart from a correlation matrix. Let's say\n        you have several numeric variables describing some items in a dataset. You can compute\n        a similarity matrix and display it as a network chart. This process is described in the\n        <Link to='/327-network-from-correlation-matrix'>post #327</Link> below.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"327_Network_from_correlation\"\n            caption=\"Network chart from correlation matrix with Python and NetworkX\"\n            linkTo=\"/327-network-from-correlation-matrix\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Graph-tool\">Network diagram with <code>graph-tool</code></h2>\n        <p>\n          The <a href='https://graph-tool.skewed.de'>graph tool</a> library is a python library implemented in C++. It makes it highly efficient to draw networks containing many nodes. Graphics to come.\n        </p>\n        <a href='https://graph-tool.skewed.de'>\n          <Button size=\"sm\">\n            Official doc\n          </Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"flow\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"sourceRoot":""}