{"version":3,"sources":["webpack:///./src/components/ChartImageContainer.js","webpack:///./src/pages/scatter-plot.js","webpack:///./src/components/ChartImage.js","webpack:///./node_modules/react-bootstrap/esm/ToggleButton.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack:///./src/util/functionDescriptions.js","webpack:///./src/components/FunctionExploration.js"],"names":["ChartImageContainer","imgName","caption","linkTo","xs","md","to","ViolinPlot","title","isTocEnabled","description","id","className","href","size","functionName","chartFamily","allGifs","ChartImage","includes","image","useStaticQuery","allFile","edges","find","n","node","name","alt","fluid","childImageSharp","noop","ToggleButton","forwardRef","_ref","ref","children","checked","type","onChange","value","disabled","inputRef","props","_useState","focused","setFocused","handleFocus","e","target","tagName","handleBlur","createElement","undefined","active","as","autoComplete","onFocus","onBlur","displayName","ButtonGroup","bsPrefix","toggle","vertical","_ref$as","Component","rest","prefix","baseClass","defaultProps","role","functionDescriptions","kdeplot","docUrl","basicUsage","parameters","relatedChart","violin","FunctionExploration","s","functionInfo","React","useState","selectedParameter","setSelectedParameter","selectedParameterInfo","filter","param","allButtons","map","item","i","key","variant","currentTarget","charAt","toUpperCase","slice","style","marginLeft","fontSize","paddingLeft"],"mappings":"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","file":"component---src-pages-scatter-plot-js-ced4606f091c2bf94847.js","sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Button, Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport FunctionExploration from '../components/FunctionExploration'\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/scatter.html'>scatter plot</a> displays the relationship between 2 numeric variables. Each data point is represented as a circle. Several tools allow to build one in python, this section provides code samples for <code>Seaborn</code>, <code>Matplotlib</code> and <code>Plotly</code> for interactive versions.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# use the function regplot to make a scatterplot\nsns.regplot(x=df[\"sepal_length\"], y=df[\"sepal_width\"])\n`\n\nexport default function ViolinPlot() {\n\n  return (\n\n    <Layout title=\"Scatterplot\" isTocEnabled>\n      <TitleAndDescription\n        title=\"Scatterplot\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>The <code>regplot()</code> function of the <code>Seaborn</code> library is definitely the best way to build a scatterplot in minutes. ðŸ”¥</p>\n            <p>Simply pass a numeric column of a data frame to both the <code>x</code> and <code>y</code> variable and the function will handle the rest.</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/40-basic-scatterplot-seaborn\"}>\n              <ChartImage imgName=\"40_Basic_Scatterplot_seaborn\"\n                caption=\"Basic boxplot with Python and Seaborn from various data input formats.\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Common caveats\">&#9888;&#65039; Scatterplot and overplotting</h2>\n          <p>The main danger with scatterplots is <a href=\"https://www.data-to-viz.com/caveat/overplotting.html\">overplotting</a>. When the sample size gets big, circles tend to overlap, making the figure unreadable.</p>\n          <p>Several workarounds exist to fix the issue, like using opacity or switching to another chart type:</p>\n          <Row>\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting1\"\n              caption=\"Basic boxplot. You can quickly read the median, quartiles and outliers of each group.\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting2\"\n              caption=\"If you add individual points with jitter, a bimodal distribution appears for group B\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting10\"\n              caption=\"If you have a very large dataset, the violin plot is a better alternative than jittering\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n          </Row>\n          <Link to=\"/134-how-to-avoid-overplotting-with-python\">\n            <Button size=\"sm\">Code and more</Button>\n          </Link>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Scatterplots with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. The <code>boxplot</code> function should get you started in minutes. The examples below aim at showcasing the various possibilities this function offers.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"40_Basic_Scatterplot_seaborn\"\n            caption=\"Most basic scatterplot with seaborn\"\n            linkTo=\"/40-basic-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"42_Scatterplot_custom_linear_fit_seaborn\"\n            caption=\"Add a regression thanks to the fit_reg parameter\"\n            linkTo=\"/42-custom-linear-regression-fit-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"41_Scatterplot_change_marker_shape_seaborn\"\n            caption=\"Customize markers: color, size, opacity, type and more\"\n            linkTo=\"/41-control-marker-features\"\n          />\n          <ChartImageContainer\n            imgName=\"43_seaborn_map_color_to_a_avariable3\"\n            caption=\"Color dots according to a group\"\n            linkTo=\"/43-use-categorical-variable-to-color-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"44_seaborn_control_axis_limits\"\n            caption=\"Control X and Y axes limits\"\n            linkTo=\"/44-control-axis-limits-of-plot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"45_set_color_of_each_point_in_scatterplot_seaborn\"\n            caption=\"Control the marker's color according to their coordinates\"\n            linkTo=\"/45-control-color-of-each-marker-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"46_add_text_annotation_scatterplot_seaborn3\"\n            caption=\"Add labels manually on your scatterplot\"\n            linkTo=\"/46-add-text-annotation-on-scatterplot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Related to Seaborn \">&#128161; Other charts involving scatterplots and <code>Seaborn</code></h2>\n        <p>If you are interested in scatterplots, some other chart could be useful to you.</p>\n        <p>A scatterplot with <Link to=\"/82-marginal-plot-with-seaborn\">marginal distribution</Link> allows to check the distribution of both the <code>x</code> and <code>y</code> variables. A <Link to=\"/111-custom-correlogram\">correlogram</Link> allows to check the relationship between each pair of numeric variables in a dataset.</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot4\"\n            caption=\"Scatterplot with marginal distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"111_Correlogram_custom4\"\n            caption=\"Build a correlogram with the pairplot function\"\n            linkTo=\"/111-custom-correlogram\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration functionName={\"violin\"} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Scatterplots with <code>Matplotlib</code></h2>\n        <p>\n          <code>Matplotlib</code> is another great alternative to build scatterplots with python. As often, it takes a bit more lines of code to get a decent chart, but allows more customization.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"130_Basic_Matplotlib_Scatterplot\"\n            caption=\"Most basic scatterplot with Matplotlib\"\n            linkTo=\"/130-basic-matplotlib-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"131_Custom_Matplotlib_Scatterplot5\"\n            caption=\"Customize marker features: size, color, stroke, type and more\"\n            linkTo=\"/131-custom-a-matplotlib-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate6\"\n            caption=\"Display a math equation on your matplotlib chart\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate5\"\n            caption=\"Matplotlib: add horizontal and vertical ablines\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate2\"\n            caption=\"Highlight a specific area of the chart with Matplotlib\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate1\"\n            caption=\"Add an annotation to highlight a specific marker\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={imgName}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","export const functionDescriptions = {\n    kdeplot: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"fill\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'controls something else', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'what what whaaat', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    },\n    violin: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.violinplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"width\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'controls something else', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'what what whaaat the fuuuck', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    }\n}\n\n\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { functionDescriptions } from \"../util/functionDescriptions\";\nimport './functionExploration.css'\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport default function FunctionExploration({ functionName }) {\n\n    // Get the right function\n    const functionInfo = functionDescriptions[functionName]\n\n    // Get the right parameter\n    const [selectedParameter, setSelectedParameter] = React.useState(functionInfo.parameters[0].name)\n    const selectedParameterInfo = functionInfo.parameters.filter(param => param.name === selectedParameter)[0]\n\n    const allButtons = functionInfo.parameters.map(\n        (item, i) =>\n            <ToggleButton\n                type=\"radio\"\n                active={true}\n                key={i}\n                className={\"functionButton\"}\n                variant=\"secondary\"\n                size=\"sm\"\n                value={item.name}\n                checked={selectedParameter === item.name}\n                onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n            >\n                {item.name}\n            </ToggleButton>\n    )\n\n    return (\n        <>\n            <h2 id={capitalize(functionName + \"()\" + \" details\")}>&#128270; <code>{functionName}</code> function parameters<a style={{ marginLeft: \"15px\", fontSize: \"14px\" }} href={functionInfo.docUrl}>&rarr; see full doc</a></h2>\n            <ButtonGroup toggle>{allButtons}</ButtonGroup>\n            <div>\n                <code>string</code>\n                <span>&rarr; {selectedParameterInfo.description}</span>\n            </div>\n            <div style={{ paddingLeft: \"6px\", fontSize: \"14px\" }}><Link to={selectedParameterInfo.relatedChart}>check a chart using it</Link></div>\n            <br />\n            <br />\n        </>\n    )\n}\n"],"sourceRoot":""}