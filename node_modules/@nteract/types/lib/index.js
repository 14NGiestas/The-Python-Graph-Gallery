"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @module types
 */
const Immutable = __importStar(require("immutable"));
const communication_1 = require("./communication");
const entities_1 = require("./entities");
__export(require("./communication"));
__export(require("./entities"));
__export(require("./ids"));
__export(require("./refs"));
exports.makeCommsRecord = Immutable.Record({
    targets: Immutable.Map(),
    info: Immutable.Map(),
    models: Immutable.Map()
});
// Pull version from our package.json
const version = require("../package.json").version;
exports.makeStateRecord = Immutable.Record({
    kernelRef: null,
    currentKernelspecsRef: null,
    communication: communication_1.makeCommunicationRecord(),
    entities: entities_1.makeEntitiesRecord()
});
exports.makeAppRecord = Immutable.Record({
    host: entities_1.makeEmptyHostRecord(),
    githubToken: null,
    notificationSystem: {
        addNotification: (msg) => {
            let logger = console.log.bind(console);
            switch (msg.level) {
                case "error":
                    logger = console.error.bind(console);
                    break;
                case "warning":
                    logger = console.warn.bind(console);
                    break;
            }
            logger(msg);
        }
    },
    isSaving: false,
    lastSaved: null,
    configLastSaved: null,
    error: null,
    // set the default version to @nteract/core's version
    version: `@nteract/core@${version}`
});
