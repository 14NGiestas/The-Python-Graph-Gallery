/**
 * @module types
 */
import * as Immutable from "immutable";
import { HostId } from "../ids";
import { HostRef } from "../refs";
export declare type ServerConfig = {
    endpoint: string;
    crossDomain: boolean | null | undefined;
    token: string | null | undefined;
};
export declare type EmptyHost = {
    type: "empty";
};
export declare type EmptyHostRecord = Immutable.RecordOf<EmptyHost>;
export declare const makeEmptyHostRecord: Immutable.Record.Factory<EmptyHost>;
export declare type BaseHostProps = {
    id?: HostId | null;
    defaultKernelName: string;
};
export declare type JupyterHostRecordProps = BaseHostProps & {
    type: "jupyter";
    token?: string | null;
    origin: string;
    basePath: string;
    crossDomain?: boolean | null;
};
export declare const makeJupyterHostRecord: Immutable.Record.Factory<JupyterHostRecordProps>;
export declare type JupyterHostRecord = Immutable.RecordOf<JupyterHostRecordProps>;
export declare type LocalHostRecordProps = BaseHostProps & {
    type: "local";
};
export declare const makeLocalHostRecord: Immutable.Record.Factory<LocalHostRecordProps>;
export declare type LocalHostRecord = Immutable.RecordOf<LocalHostRecordProps>;
export declare type HostRecordProps = LocalHostRecordProps | JupyterHostRecordProps;
export declare type HostRecord = LocalHostRecord | JupyterHostRecord | EmptyHostRecord;
export declare type HostsRecordProps = {
    byRef: Immutable.Map<HostRef, HostRecord>;
    refs: Immutable.List<HostRef>;
};
export declare const makeHostsRecord: Immutable.Record.Factory<HostsRecordProps>;
