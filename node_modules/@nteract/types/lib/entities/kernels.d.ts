/// <reference types="node" />
/**
 * @module types
 */
import { ChildProcess } from "child_process";
import * as Immutable from "immutable";
import { Subject } from "rxjs";
import { HostRef, KernelRef } from "../refs";
import { KernelId, SessionId } from "../ids";
import { KernelInfo } from "./kernel-info";
export { KernelInfo };
export declare type KernelNotStartedProps = {
    kernelSpecName?: string | null;
    status?: string | null;
    type: "unknown";
    cwd: ".";
    channels: Subject<any>;
    info?: KernelInfo | null;
};
export declare type KernelNotStartedRecord = Immutable.RecordOf<KernelNotStartedProps>;
export declare const makeKernelNotStartedRecord: Immutable.Record.Factory<KernelNotStartedProps>;
export declare type LocalKernelProps = {
    kernelSpecName?: string | null;
    info?: KernelInfo | null;
    hostRef?: HostRef | null;
    lastActivity?: Date | null;
    channels: Subject<any>;
    cwd: string;
    status?: string | null;
    type: "zeromq";
    spawn?: ChildProcess | null;
    connectionFile?: string | null;
};
export declare const makeLocalKernelRecord: Immutable.Record.Factory<LocalKernelProps>;
export declare type LocalKernelRecord = Immutable.RecordOf<LocalKernelProps>;
export declare type RemoteKernelProps = {
    kernelSpecName?: string | null;
    info?: KernelInfo | null;
    hostRef?: HostRef | null;
    lastActivity?: Date | null;
    channels: Subject<any>;
    cwd: string;
    status?: string | null;
    type: "websocket";
    sessionId?: SessionId | null;
    id?: KernelId | null;
};
export declare const makeRemoteKernelRecord: Immutable.Record.Factory<RemoteKernelProps>;
export declare type RemoteKernelRecord = Immutable.RecordOf<RemoteKernelProps>;
export declare type KernelRecord = KernelNotStartedRecord | LocalKernelRecord | RemoteKernelRecord;
export declare type KernelsRecordProps = {
    byRef: Immutable.Map<KernelRef, KernelRecord>;
};
export declare const makeKernelsRecord: Immutable.Record.Factory<KernelsRecordProps>;
