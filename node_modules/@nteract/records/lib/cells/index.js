"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const codeCell = __importStar(require("./code-cell"));
const markdownCell = __importStar(require("./markdown-cell"));
const rawCell = __importStar(require("./raw-cell"));
__export(require("./code-cell"));
__export(require("./markdown-cell"));
__export(require("./raw-cell"));
/**
 * Turn any output that was in nbformat into a record
 */
function cellFromNbformat(cell) {
    switch (cell.cell_type) {
        case codeCell.CODECELL:
            return codeCell.codeCellRecordFromNbformat(cell);
        case markdownCell.MARKDOWNCELL:
            return markdownCell.markdownCellRecordFromNbformat(cell);
        case rawCell.RAWCELL:
            return rawCell.rawCellRecordFromNbformat(cell);
        default:
            throw new TypeError(`Cell type unknown`);
    }
}
exports.cellFromNbformat = cellFromNbformat;
