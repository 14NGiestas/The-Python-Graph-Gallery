import * as common from "../common";
/**
 * Let this declare the way for well typed records for outputs
 *
 * General organization is:
 *
 *   - Declare the in-memory type
 *   - Declare the nbformat type (exactly matching nbformat.v4.schema.json)
 *   - Declare the message type (matching http://jupyter-client.readthedocs.io/en/stable/messaging.html)
 *   - Write a way to go from nbformat to our in-memory version
 *   - Write a way to go from message spec to our in-memory version
 *
 */
declare type DisplayDataType = "display_data";
export declare const DISPLAYDATA: DisplayDataType;
export declare const outputType: "display_data";
export declare type DisplayDataOutput = {
    outputType: DisplayDataType;
    data: common.MimeBundle;
    metadata: {};
};
export declare type NbformatDisplayDataOutput = {
    output_type: DisplayDataType;
    data: common.OnDiskMimebundle;
    metadata: {};
};
export declare type DisplayDataMessage = {
    header: {
        msg_type: DisplayDataType;
    };
    content: {
        data: common.MimeBundle;
        metadata: {};
    };
};
export declare function displayData(displayDataOutput?: {
    outputType?: DisplayDataType;
    data?: common.MimeBundle;
    metadata?: {};
}): DisplayDataOutput;
export declare namespace displayData {
    var type: string;
    var fromNbformat: (s: NbformatDisplayDataOutput) => DisplayDataOutput;
    var fromJupyterMessage: (msg: DisplayDataMessage) => DisplayDataOutput;
}
export {};
