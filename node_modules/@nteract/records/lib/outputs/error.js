"use strict";
/**
 * Let this declare the way for well typed records for outputs
 *
 * General organization is:
 *
 *   - Declare the in-memory type
 *   - Declare the nbformat type (exactly matching nbformat.v4.schema.json)
 *   - Declare the message type (matching http://jupyter-client.readthedocs.io/en/stable/messaging.html)
 *   - Write a way to go from nbformat to our in-memory version
 *   - Write a way to go from message spec to our in-memory version
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERROR = "error";
function errorOutput(eOut) {
    return Object.freeze({
        outputType: exports.ERROR,
        ename: eOut.ename || "",
        evalue: eOut.evalue || "",
        // Freeze a copy of the traceback array
        traceback: Array.isArray(eOut.traceback)
            ? Object.freeze(eOut.traceback.slice())
            : []
    });
}
exports.errorOutput = errorOutput;
errorOutput.type = exports.ERROR;
errorOutput.fromNbformat = function fromNbformat(s) {
    return errorOutput(s);
};
errorOutput.fromJupyterMessage = function fromJupyterMessage(msg) {
    return errorOutput(msg.content);
};
