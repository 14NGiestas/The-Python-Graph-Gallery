import { NbformatCell, NbformatCodeCell, CodeCellType, MarkdownCellType, NbformatMarkdownCell } from "./cells";
import { NbformatOutput } from "./outputs";
import { ImmutableNotebook, ImmutableCellOrder, ImmutableCellMap, ExecutionCount } from "./types";
export declare type v4NotebookVersionType = 4;
export declare const v4NotebookVersion: v4NotebookVersionType;
export interface Notebook {
    nbformat: v4NotebookVersionType;
    nbformat_minor: v4NotebookVersionType;
    metadata: object;
    cellOrder: Array<string>;
    cellMap: object;
}
export interface CodeCell {
    cell_type: CodeCellType;
    metadata: object;
    execution_count: ExecutionCount;
    source: string;
    outputs: Array<NbformatOutput>;
}
export interface MarkdownCell {
    cell_type: MarkdownCellType;
    source: string;
    metadata: object;
}
export declare function createCodeCell(cell?: CodeCell): NbformatCodeCell;
export declare function createMarkdownCell(cell?: MarkdownCell): NbformatMarkdownCell;
export declare const emptyCodeCell: NbformatCodeCell;
export declare const emptyMarkdownCell: NbformatMarkdownCell;
export declare const defaultNotebook: {
    nbformat: 4;
    nbformat_minor: 4;
    metadata: Object;
    cellOrder: never[];
    cellMap: Object;
};
export declare function createNotebook(notebook?: Notebook): ImmutableNotebook;
export declare const emptyNotebook: ImmutableNotebook;
export interface CellStructure {
    cellOrder: ImmutableCellOrder;
    cellMap: ImmutableCellMap;
}
export declare function appendCell(cellStructure: CellStructure, immutableCell: NbformatCell, id?: string): {
    cellOrder: number;
    cellMap: ImmutableCellMap;
};
export declare function appendCellToNotebook(immnb: ImmutableNotebook, immCell: NbformatCell): ImmutableNotebook;
export declare function insertCellAt(notebook: ImmutableNotebook, cell: NbformatCell, cellId: string, index: number): ImmutableNotebook;
export declare function insertCellAfter(notebook: ImmutableNotebook, cell: NbformatCell, cellId: string, priorCellId: string): ImmutableNotebook;
export declare function removeCell(notebook: ImmutableNotebook, cellId: string): ImmutableNotebook;
export declare function deleteCell(notebook: ImmutableNotebook, cellId: string): ImmutableNotebook;
export declare const monocellNotebook: ImmutableNotebook;
