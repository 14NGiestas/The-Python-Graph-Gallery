/**
 * @module commutable
 */
import { ImmutableNotebook } from "./notebook";
import { JSONObject, MultiLineString, ExecutionCount } from "./primitives";
import { Output } from "./outputs";
/** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *                              Cell Types
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
export interface CodeCell {
    cell_type: "code";
    metadata: JSONObject;
    execution_count: ExecutionCount;
    source: MultiLineString;
    outputs: Output[];
}
export interface MarkdownCell {
    cell_type: "markdown";
    metadata: JSONObject;
    source: MultiLineString;
}
export interface RawCell {
    cell_type: "raw";
    metadata: JSONObject;
    source: MultiLineString;
}
export declare type Cell = CodeCell | MarkdownCell | RawCell;
export declare type Notebook = {
    cells: Array<Cell>;
    metadata: Object;
    nbformat: 4;
    nbformat_minor: number;
};
export declare const fromJS: (notebook: Notebook) => ImmutableNotebook;
/**
 * Converts an immutable representation of a notebook to a JSON representation.
 *
 * @param immnb The immutable representation of a notebook.
 *
 * @returns The JSON representation of a notebook.
 */
export declare const toJS: (immnb: ImmutableNotebook) => Notebook;
